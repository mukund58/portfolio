<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Mukund Parmar - Full Stack Web Developer &amp; Software Engineer</title>
    <subtitle>Portfolio of Mukund Parmar, a passionate Full Stack Web Developer specializing in MERN Stack, DevOps, and Competitive Programming. View my projects and experience.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://mukund.xyz/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://mukund.xyz"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-09-23T00:00:00+00:00</updated>
    <id>https://mukund.xyz/atom.xml</id>
    <entry xml:lang="en">
        <title>Quantitative Aptitude</title>
        <published>2025-09-23T00:00:00+00:00</published>
        <updated>2025-09-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/notes/quantitative-aptitude/"/>
        <id>https://mukund.xyz/notes/quantitative-aptitude/</id>
        
        <content type="html" xml:base="https://mukund.xyz/notes/quantitative-aptitude/">&lt;a href=&quot;&amp;#x2F;images&amp;#x2F;quantitative-aptitude.jpg&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;image&quot;&gt;
  &lt;img src=&quot;&amp;#x2F;images&amp;#x2F;quantitative-aptitude.jpg&quot;
       alt=&quot;image&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h1 id=&quot;quantitative-aptitude&quot;&gt;Quantitative Aptitude&lt;&#x2F;h1&gt;
&lt;p&gt;A comprehensive guide to mastering quantitative aptitude, covering essential concepts, problem-solving techniques, and practice questions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;time-and-work&quot;&gt;Time and Work&lt;&#x2F;h2&gt;
&lt;p&gt;Time and Work problems are a common topic in quantitative aptitude tests. They involve calculating the time taken to complete a task when multiple workers are involved or determining how much work can be done in a given time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;invert-trick&quot;&gt;Invert Trick&lt;&#x2F;h3&gt;
&lt;p&gt;The Invert Trick is a useful technique for solving Time and Work problems. It involves inverting the relationship between time and work to simplify calculations. For example, if a worker can complete a task in 5 days, their work rate is 1&#x2F;5 of the task per day.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;example-problem&quot;&gt;Example Problem&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;If A can complete a task in 4 days and B can complete the same task in 6 days, how long will it take for both A and B to complete the task together?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A’s work rate = 1&#x2F;4 per day&lt;&#x2F;p&gt;
&lt;p&gt;B’s work rate = 1&#x2F;6 per day&lt;&#x2F;p&gt;
&lt;p&gt;Combined work rate = 1&#x2F;4 + 1&#x2F;6 = 5&#x2F;12 per day&lt;&#x2F;p&gt;
&lt;p&gt;Time taken together = 1 &#x2F; (5&#x2F;12) = 12&#x2F;5 = 2.4 days&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;A can work 5 times faster than B. If A can complete a task in 60 days less than b to complete the work , in how many days does A and B individually complete the work?
&lt;strong&gt;Solution:&lt;&#x2F;strong&gt;
Let the time taken by B to complete the work be x days.
Then, the time taken by A to complete the work is (x - 60) days.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Configure neovim from Scratch</title>
        <published>2025-09-18T00:00:00+00:00</published>
        <updated>2025-09-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/blog/how-to-config-neovim/"/>
        <id>https://mukund.xyz/blog/how-to-config-neovim/</id>
        
        <content type="html" xml:base="https://mukund.xyz/blog/how-to-config-neovim/">&lt;h4 id=&quot;how-to-install&quot;&gt;How to install&lt;&#x2F;h4&gt;
&lt;p&gt;To install simply just type&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sudo pacman -S neovim
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now make a directory in .config&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;mkdir ~&#x2F;.config&#x2F;nvim
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;then go to that directory and open nvim&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;~&#x2F;.config&#x2F;nvim
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;nvim .
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;here this type of interface popup&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhlEccoDEj5CZgXVd6CiweqhVczEQRHgki0We_MffmX2BqDx3B5HnaY0dc6Sjgg8UhUmgDqDSGvXY-2BFVDqHv_qf5ZoDLFaICZGwVfN4EMGUiRIQGon5F2VIoo2DNEs2RfyTKr14gLWaSYFUSR7RdvoLBhoJZ-GHK56EEyCqxkPzU1iuIBjqQNU-MZMfqj&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1743-56.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhlEccoDEj5CZgXVd6CiweqhVczEQRHgki0We_MffmX2BqDx3B5HnaY0dc6Sjgg8UhUmgDqDSGvXY-2BFVDqHv_qf5ZoDLFaICZGwVfN4EMGUiRIQGon5F2VIoo2DNEs2RfyTKr14gLWaSYFUSR7RdvoLBhoJZ-GHK56EEyCqxkPzU1iuIBjqQNU-MZMfqj&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1743-56.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h4 id=&quot;how-to-configure&quot;&gt;How to configure&lt;&#x2F;h4&gt;
&lt;p&gt;Now press &lt;code&gt;:&lt;&#x2F;code&gt; and type&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;:h rtp
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;here you can see &lt;code&gt;default $XDG_CONFIG_HOME&#x2F;nvim&lt;&#x2F;code&gt; is our main directory where we put all our config files.
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgxIXHocnkLhtvxZN4rIk7xEVAH1fjw809GNTUtNZZ3TzGUT0f1M3OXuUCDi2658gGYym7XHirlKi2ZCjdO4AIN80Fl7Mp985hdHtjlLXtw0qKMSzVNngVe2gs2iQY_Ln3JQWQzRwL05Ja_Se7L-J4mwMx4eh32LBsVaBlfvyw0Pvva25TNJQdWshF0Ym55&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1748-25.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgxIXHocnkLhtvxZN4rIk7xEVAH1fjw809GNTUtNZZ3TzGUT0f1M3OXuUCDi2658gGYym7XHirlKi2ZCjdO4AIN80Fl7Mp985hdHtjlLXtw0qKMSzVNngVe2gs2iQY_Ln3JQWQzRwL05Ja_Se7L-J4mwMx4eh32LBsVaBlfvyw0Pvva25TNJQdWshF0Ym55&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1748-25.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Now exit from that your interface should look like this&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhSAZcEnzH-SOXjVUgO_v2YnV2Dyw85kIKMAJp6iVlgJHk1rkfqtybFvjD2MgTh9o0HiQLGgiJ_ycv7MRV2G9i4ChN2ksg-_qEfdTyMk-xsWboqPaPLLyc-gtedBURYFw7S9jpZtfknIPT1J0k5TEQs3EvW666VX34ERuegZp1kKMZ-XXbyIpxV41HabjNZ&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1743-56.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhSAZcEnzH-SOXjVUgO_v2YnV2Dyw85kIKMAJp6iVlgJHk1rkfqtybFvjD2MgTh9o0HiQLGgiJ_ycv7MRV2G9i4ChN2ksg-_qEfdTyMk-xsWboqPaPLLyc-gtedBURYFw7S9jpZtfknIPT1J0k5TEQs3EvW666VX34ERuegZp1kKMZ-XXbyIpxV41HabjNZ&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1743-56.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Now press % and give file name &lt;code&gt;init.lua&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhBh7cr8aFVY-ds0dN_xYKfcNph1WL-UM5aY7ESQaqsCbUQ_ZDiH5-djUKqEt_izHkHnmjnPOdw1k2xvR1PhiWhwFkzvwxw3sinknaf5z3XYqCmFskUD-IdLh_F9ltbk7j8c_DQyi08Y822w-FPwpQ_mb_fluP4t9RW8Bmk2Qgx7bTW8bTm-plN11bdqlCb&amp;#x2F;s501&amp;#x2F;pic-selected-240913-1812-12.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhBh7cr8aFVY-ds0dN_xYKfcNph1WL-UM5aY7ESQaqsCbUQ_ZDiH5-djUKqEt_izHkHnmjnPOdw1k2xvR1PhiWhwFkzvwxw3sinknaf5z3XYqCmFskUD-IdLh_F9ltbk7j8c_DQyi08Y822w-FPwpQ_mb_fluP4t9RW8Bmk2Qgx7bTW8bTm-plN11bdqlCb&amp;#x2F;s501&amp;#x2F;pic-selected-240913-1812-12.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;To type something press &lt;code&gt;i&lt;&#x2F;code&gt; (insert) or &lt;code&gt;a&lt;&#x2F;code&gt;(append)
type this
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhaQ98ctWxLs-7I6zb9ZJge3X8_qn9f4rlyiQ-7KlwDW8u7DruJ5YtXDisDVBWh_nkzteZQpmrARbSlqwFEFop5SBlB4mewx1U03kNvEFyn9I2TnpT6ams3qdqSJKw923wByoOCPxWJ6qW_oqzKTn30LErGIaXfzSgpXF9bSAkPN-RuOXa8e1YXUFOmSbgT&amp;#x2F;s368&amp;#x2F;pic-selected-240913-1815-40.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhaQ98ctWxLs-7I6zb9ZJge3X8_qn9f4rlyiQ-7KlwDW8u7DruJ5YtXDisDVBWh_nkzteZQpmrARbSlqwFEFop5SBlB4mewx1U03kNvEFyn9I2TnpT6ams3qdqSJKw923wByoOCPxWJ6qW_oqzKTn30LErGIaXfzSgpXF9bSAkPN-RuOXa8e1YXUFOmSbgT&amp;#x2F;s368&amp;#x2F;pic-selected-240913-1815-40.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;now exit from insert mode by pressing &lt;code&gt;Esc&lt;&#x2F;code&gt; or &lt;code&gt;ctrl + c&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After to save this file press &lt;code&gt;:&lt;&#x2F;code&gt; and type &lt;code&gt;w&lt;&#x2F;code&gt;(write) or &lt;code&gt;wq&lt;&#x2F;code&gt;(write and quiet)&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEjpdOezSW67-NQy0aDlGu0Kwjbd8syUv59SArftXhIdej2_8t9F6j_ZAcQYZSV1jmwDHaHvz4j_oNmsFtSrwQgr5rbUQJZtGVkQKuWcoDw4YQkwBF0A2WMaLRD4gN7ELO0eyX8qB6UqcF4iXwebBCuw8dmGTx7BTj2vWki6rsZOjnp3W_GzpYHOnsYh4yP4&amp;#x2F;s421&amp;#x2F;pic-selected-240913-1823-04.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEjpdOezSW67-NQy0aDlGu0Kwjbd8syUv59SArftXhIdej2_8t9F6j_ZAcQYZSV1jmwDHaHvz4j_oNmsFtSrwQgr5rbUQJZtGVkQKuWcoDw4YQkwBF0A2WMaLRD4gN7ELO0eyX8qB6UqcF4iXwebBCuw8dmGTx7BTj2vWki6rsZOjnp3W_GzpYHOnsYh4yP4&amp;#x2F;s421&amp;#x2F;pic-selected-240913-1823-04.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Again go to nvim&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;nvim .
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;here you can notice that our file is created and bottom left you can see hello.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEjMB3Opt0bRBdhmPvygfl9gno_5qNKMYS0L9e2L1xZ7bypb06yaCcNM7jYwnrRCL5R-XhnV9nCMRXtgjuSSLQAZGAwjc342wyQKptP02zPURy90YhXAFDL8Kt5YPhWuS1wTQ_LPNrruEtf50tki2t0fUde7R4YXn2Suf_UzA-4m-4F76od5_Ms9qWu2TpLM&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1833-48.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEjMB3Opt0bRBdhmPvygfl9gno_5qNKMYS0L9e2L1xZ7bypb06yaCcNM7jYwnrRCL5R-XhnV9nCMRXtgjuSSLQAZGAwjc342wyQKptP02zPURy90YhXAFDL8Kt5YPhWuS1wTQ_LPNrruEtf50tki2t0fUde7R4YXn2Suf_UzA-4m-4F76od5_Ms9qWu2TpLM&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1833-48.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Now press &lt;code&gt;d&lt;&#x2F;code&gt; to create directory and give name &lt;code&gt;lua&lt;&#x2F;code&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi8NXHzCnitR7Xo4yNijWhiskByVxuySeYQefEIMfgtcAE_Xw9RrsUW4fXPHYWo8kyDoAv6EO2_skts5Tp8ZW-SuyfynQr-mqYU1-Ptk-X6CSoSHJNl2I5i5FNoxPKYQ9rrRhWAyQ-uA5exKwZiJvl0rs5w3YhoE-I1VKG6ECR2EhzYX80D39zVEIwbIzT6&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1844-33.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi8NXHzCnitR7Xo4yNijWhiskByVxuySeYQefEIMfgtcAE_Xw9RrsUW4fXPHYWo8kyDoAv6EO2_skts5Tp8ZW-SuyfynQr-mqYU1-Ptk-X6CSoSHJNl2I5i5FNoxPKYQ9rrRhWAyQ-uA5exKwZiJvl0rs5w3YhoE-I1VKG6ECR2EhzYX80D39zVEIwbIzT6&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1844-33.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Go to lua directory and create a whatever named directory
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiJ7bK9EGUlpO1Dco4fQgqA4Xdt-6v_hGy1GAlPHNGz66hSlsVycc-TSvM7FLa4pGIktsm3_-af8u6HnrR5YrH84_MPZvp7Y7NFKfgzfqEMZBg6HtBlnH2MPejwMn79jdBoP-OFTOFn-t806JABVJYnDjFTLbd2oXIw1kVgKeKKnQfrDtCsz4PbVtqyZeXt&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1911-55.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiJ7bK9EGUlpO1Dco4fQgqA4Xdt-6v_hGy1GAlPHNGz66hSlsVycc-TSvM7FLa4pGIktsm3_-af8u6HnrR5YrH84_MPZvp7Y7NFKfgzfqEMZBg6HtBlnH2MPejwMn79jdBoP-OFTOFn-t806JABVJYnDjFTLbd2oXIw1kVgKeKKnQfrDtCsz4PbVtqyZeXt&amp;#x2F;s1364&amp;#x2F;pic-window-240913-1911-55.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;And go to that directory and create file &lt;code&gt;init.lua&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;for testing type this in your file:&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiyM5KXuvn-gep8cjwaEVplNJQlLORxU02KLEZ_Z_4vjFtsKsgjPp_fnlvJYDHRcrVkBv07YJmkBA0L_PcdSsySEw4l8i0lHyTZ431SHcQ7-YN0ciWIq5ZZbboR6A-_axsPJh11OXWKTpkBvlf8I6zLzn-pDlN1bVxbgIV2_RQ2KU_8pr9a-kcjRdssrO7W&amp;#x2F;s421&amp;#x2F;pic-selected-240913-1924-20.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiyM5KXuvn-gep8cjwaEVplNJQlLORxU02KLEZ_Z_4vjFtsKsgjPp_fnlvJYDHRcrVkBv07YJmkBA0L_PcdSsySEw4l8i0lHyTZ431SHcQ7-YN0ciWIq5ZZbboR6A-_axsPJh11OXWKTpkBvlf8I6zLzn-pDlN1bVxbgIV2_RQ2KU_8pr9a-kcjRdssrO7W&amp;#x2F;s421&amp;#x2F;pic-selected-240913-1924-20.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Again press &lt;code&gt;:&lt;&#x2F;code&gt; to go explore mode &lt;code&gt;Ex&lt;&#x2F;code&gt;
and go to previous directory &lt;code&gt;..&#x2F;&lt;&#x2F;code&gt;  where our first file created&lt;&#x2F;p&gt;
&lt;p&gt;open that file &lt;code&gt;~&#x2F;.config&#x2F;nvim&#x2F;init.lua&lt;&#x2F;code&gt; and type this&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiT6b3sAVAiFr1U1ppFdb-bByHxALCEixxo3sBAMnEcAW4SJoOgChureVhKI9cAOE4hdhrWbgiC5xIqG1mguQRwYt73-NLjELafCnbrnj6cwsuau2QNjlG6HfLFCUeJy7ehN8BSHinkkUgmUy0LTEdAY1XxD73IKWOTeStmkPPrtPltedD-9M_HZ-qImK7J&amp;#x2F;s437&amp;#x2F;pic-selected-240913-2120-00.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiT6b3sAVAiFr1U1ppFdb-bByHxALCEixxo3sBAMnEcAW4SJoOgChureVhKI9cAOE4hdhrWbgiC5xIqG1mguQRwYt73-NLjELafCnbrnj6cwsuau2QNjlG6HfLFCUeJy7ehN8BSHinkkUgmUy0LTEdAY1XxD73IKWOTeStmkPPrtPltedD-9M_HZ-qImK7J&amp;#x2F;s437&amp;#x2F;pic-selected-240913-2120-00.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;now exit from nvim by pressing &lt;code&gt;:wq&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Again open nvim&lt;&#x2F;p&gt;
&lt;p&gt;pwd :- ~&#x2F;.config&#x2F;nvim&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;nvim .
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A message like this will show when you open nvim&lt;&#x2F;p&gt;
&lt;p&gt;congrats if this type of  message will shows so you go further and lets make nvim usable.
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhYrqlA4oWINyvo_eBhS9rQhy0Hyxje-okrf72B1grUz9KcNLu-OHtkUEa6reFmY5QtY3PadNvt-8rX_fq9lxQjxBB8l9IA04sapSjgAZvvPigHQBX_vYbEsDl_Cy3MjOjgyCiiUEeCmJnxrTqGfDOCuBdy3JkTTBr4IuFnGEMpNRJvfpLIearaiJKDPxB-&amp;#x2F;s566&amp;#x2F;pic-selected-240913-2125-02.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhYrqlA4oWINyvo_eBhS9rQhy0Hyxje-okrf72B1grUz9KcNLu-OHtkUEa6reFmY5QtY3PadNvt-8rX_fq9lxQjxBB8l9IA04sapSjgAZvvPigHQBX_vYbEsDl_Cy3MjOjgyCiiUEeCmJnxrTqGfDOCuBdy3JkTTBr4IuFnGEMpNRJvfpLIearaiJKDPxB-&amp;#x2F;s566&amp;#x2F;pic-selected-240913-2125-02.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;h4 id=&quot;creating-some-shortcuts&quot;&gt;Creating some shortcuts&lt;&#x2F;h4&gt;
&lt;p&gt;Now lets make some shortcuts
first you have to create a remap.lua file in
~&#x2F;.config&#x2F;nvim&#x2F;lua&#x2F;soul&#x2F;remap.lua&lt;&#x2F;p&gt;
&lt;p&gt;here &lt;code&gt;vim.g.leader&lt;&#x2F;code&gt; is name where you can assign a keybutton&lt;&#x2F;p&gt;
&lt;p&gt;in second line you can see &lt;code&gt;vim.keymap.set&lt;&#x2F;code&gt; is used for set keyboard shortcuts of vim command&lt;&#x2F;p&gt;
&lt;p&gt;here we can directly execute this command  &lt;code&gt;Ex&lt;&#x2F;code&gt; by &lt;code&gt;spacebar pv&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgkIWoYFI1FDCInDmElLLTNXJg5RMNWMcl9lr5fyd2hkMuc9JgP455kQ5o-vDAfumfGmkp6vkN4lsOAYMPJUOOnVJmLUCGc2rVNvS30WZggCV56L1XGMgLT_tBNO7of3YWbSKnTIGPkNhxcs3CVUEcaXtzVmso30lxwH2nSVH_u72Wz5wyiLg6HeyBQMNKe&amp;#x2F;s722&amp;#x2F;pic-selected-240913-2136-46.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgkIWoYFI1FDCInDmElLLTNXJg5RMNWMcl9lr5fyd2hkMuc9JgP455kQ5o-vDAfumfGmkp6vkN4lsOAYMPJUOOnVJmLUCGc2rVNvS30WZggCV56L1XGMgLT_tBNO7of3YWbSKnTIGPkNhxcs3CVUEcaXtzVmso30lxwH2nSVH_u72Wz5wyiLg6HeyBQMNKe&amp;#x2F;s722&amp;#x2F;pic-selected-240913-2136-46.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;save this file &lt;code&gt;:w&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;after press &lt;code&gt;:so&lt;&#x2F;code&gt; hit Enter (it will complie the source)
now you can press &lt;code&gt;spacebar pv&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;here when you exit from nvim you have to complie again
so to solve this problem
we have to type this in our init.lua&lt;&#x2F;p&gt;
&lt;p&gt;pwd:- ~&#x2F;.config&#x2F;nvim&#x2F;lua&#x2F;soul&#x2F;init.lua&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgUOFsyOZKl6t6RgG0Husli4wsPs3SQ-x0RuOLF8usuHSbk-5qqaL1Lgjv5VsCPvSihfZK8op-EHFw2YdaZBkiE0ITJXQRCCPzA80pNNQn1iGaxKbFtLQ6xVVDLg4hkj_Vyz2mHRbQsDMv2v3IUxJaMQYwwrd1lbkj5JBGQTDlyrH4ks-1I-bGXP8RMUoRa&amp;#x2F;s722&amp;#x2F;pic-selected-240913-2204-18.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgUOFsyOZKl6t6RgG0Husli4wsPs3SQ-x0RuOLF8usuHSbk-5qqaL1Lgjv5VsCPvSihfZK8op-EHFw2YdaZBkiE0ITJXQRCCPzA80pNNQn1iGaxKbFtLQ6xVVDLg4hkj_Vyz2mHRbQsDMv2v3IUxJaMQYwwrd1lbkj5JBGQTDlyrH4ks-1I-bGXP8RMUoRa&amp;#x2F;s722&amp;#x2F;pic-selected-240913-2204-18.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Now you everytime you open your nvim it will compile automatically&lt;&#x2F;p&gt;
&lt;h4 id=&quot;add-pulgin-manger-packer&quot;&gt;Add pulgin-manger(packer)&lt;&#x2F;h4&gt;
&lt;p&gt;Go to this repo &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wbthomason&#x2F;packer.nvim&quot;&gt;packer.nvim&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;clone this repo in your ~&#x2F;.config&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;git clone --depth 1 https:&#x2F;&#x2F;github.com&#x2F;wbthomason&#x2F;packer.nvim\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; ~&#x2F;.local&#x2F;share&#x2F;nvim&#x2F;site&#x2F;pack&#x2F;packer&#x2F;start&#x2F;packer.nvim
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now copy this from that repo&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cmd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;[[packadd packer.nvim]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;packer&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;startup(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(use)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Packer can manage itself
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;wbthomason&#x2F;packer.nvim&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;paste it in
~&#x2F;.config&#x2F;nvim&#x2F;lua&#x2F;soul&#x2F;packer.lua&lt;&#x2F;p&gt;
&lt;p&gt;now complie it &lt;code&gt;:so&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;now can able to type this &lt;code&gt;:PackerSync&lt;&#x2F;code&gt;
it will look like this&lt;&#x2F;p&gt;
&lt;p&gt;if the option is not available you  can restart your nvim and recomplie it .&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgh375U-HZtX-coZhrI3CWI-Js40-XB3U4NZs98O2rFTKdEcesOj7uu1o3U5vWleZgWs5M5ElorMuVQYJ-PeLND3yImfUfsnZ9ODEz0gQQRHHO6DTQiN7UcZTCxWtAlcjQBuxXHr0O6P4XXVoQZHRxeiGAXnchpmbhA9l7Bn2U4vHo465XCjjJzfrYp19pO&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2238-51.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgh375U-HZtX-coZhrI3CWI-Js40-XB3U4NZs98O2rFTKdEcesOj7uu1o3U5vWleZgWs5M5ElorMuVQYJ-PeLND3yImfUfsnZ9ODEz0gQQRHHO6DTQiN7UcZTCxWtAlcjQBuxXHr0O6P4XXVoQZHRxeiGAXnchpmbhA9l7Bn2U4vHo465XCjjJzfrYp19pO&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2238-51.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;congrats you come this far you have succesfully installed pulgin-manger.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;add-pulgin-fuzzy-finder&quot;&gt;Add Pulgin(fuzzy finder)&lt;&#x2F;h5&gt;
&lt;p&gt;Now lets add some pulgin&lt;&#x2F;p&gt;
&lt;p&gt;go to repo &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nvim-telescope&#x2F;telescope.nvim&quot;&gt;telescope.nvim&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;copy this from that repo&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;nvim-telescope&#x2F;telescope.nvim&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;tag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;0.1.8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- or                            , branch = &amp;#39;0.1.x&amp;#39;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;requires &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= { {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;nvim-lua&#x2F;plenary.nvim&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;} }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;paste in your packer.lua
it should be look like this
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiYndla32ASmdYaPT8Hei_O37y4CWg60XD-Iq3T3e_-_6NYKpYTqsh2pc8YN7wc_XG7dgKnQ_iX6y5EkBxmHAn2KM-cpeKE31BElAb0P1hxtYo3_kO1lkUOGrU8doI3ozwy7tIHtSzmK2kLpkpgj0EKQG2zFnfMS_gnkhVQE6Mog12IdVM-SclNdXx5ndvl&amp;#x2F;s617&amp;#x2F;pic-selected-240913-2258-47.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiYndla32ASmdYaPT8Hei_O37y4CWg60XD-Iq3T3e_-_6NYKpYTqsh2pc8YN7wc_XG7dgKnQ_iX6y5EkBxmHAn2KM-cpeKE31BElAb0P1hxtYo3_kO1lkUOGrU8doI3ozwy7tIHtSzmK2kLpkpgj0EKQG2zFnfMS_gnkhVQE6Mog12IdVM-SclNdXx5ndvl&amp;#x2F;s617&amp;#x2F;pic-selected-240913-2258-47.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Now press &lt;code&gt;:w&lt;&#x2F;code&gt;, &lt;code&gt;:so&lt;&#x2F;code&gt; and after that &lt;code&gt;:PackerSync&lt;&#x2F;code&gt;
it will start to install that pulgin&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEihJpdFhxgTfc0yMf4doskm_O3ow39JywjDig4GljqgfXrRcFOHouxfLts4TNX3t-pki0FbA-_miGjCY7XfuMsNISkFvd7SQSvo2O3o8K01vz3X470k64m3HUj_Lleity-hWBDM1kPhyphenhyphenZ_N-AHWhr4vbPQYOtOSnri4iWxUz9nlOBqgT_q44Zkgg7X7OpPm&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2302-39.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEihJpdFhxgTfc0yMf4doskm_O3ow39JywjDig4GljqgfXrRcFOHouxfLts4TNX3t-pki0FbA-_miGjCY7XfuMsNISkFvd7SQSvo2O3o8K01vz3X470k64m3HUj_Lleity-hWBDM1kPhyphenhyphenZ_N-AHWhr4vbPQYOtOSnri4iWxUz9nlOBqgT_q44Zkgg7X7OpPm&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2302-39.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Now copy this line
paste it in  ~&#x2F;.config&#x2F;nvim&#x2F;after&#x2F;pulgin&#x2F;telescope.lua
here create respective directory&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;builtin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;telescope.builtin&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;lt;leader&amp;gt;pf&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, builtin.find_files, {})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;C-p&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, builtin.git_files, {})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;lt;leader&amp;gt;ps&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;	builtin.grep_string({ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;search &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= vim.fn.input(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Grep &amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)});
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now press &lt;code&gt;:w&lt;&#x2F;code&gt; &lt;code&gt;:so&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;now you can use fuzzy finder
press &lt;code&gt;spacebar pf or ps&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgZmYnHq8oVAFiA4PIhNFusfq1XP2EeWEdXAJSHLkrjEK8-mLU2SpM1N0_-UCAhCXVSG-WfhibauYrrn-fxgxQY48WxW-qyeW8YMJ2nP6qh3Eha6TX1oHmPjt69pL-GLpaXNwVtUZfZyFsnN4N3kS8dMt8iWcG4-rEcrh8yvvmWSQTzHeumTqpIxlfxug0-&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2355-48.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgZmYnHq8oVAFiA4PIhNFusfq1XP2EeWEdXAJSHLkrjEK8-mLU2SpM1N0_-UCAhCXVSG-WfhibauYrrn-fxgxQY48WxW-qyeW8YMJ2nP6qh3Eha6TX1oHmPjt69pL-GLpaXNwVtUZfZyFsnN4N3kS8dMt8iWcG4-rEcrh8yvvmWSQTzHeumTqpIxlfxug0-&amp;#x2F;s1364&amp;#x2F;pic-window-240913-2355-48.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h5 id=&quot;add-pulgin-rose-pine&quot;&gt;Add pulgin (Rosé Pine)&lt;&#x2F;h5&gt;
&lt;p&gt;Now go to this repo &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;will&#x2F;rose-pine-neovim&quot;&gt;Rosé Pine&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;copy this line
paste it in ~&#x2F;.config&#x2F;nvim&#x2F;lua&#x2F;soul&#x2F;packer.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use({ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;rose-pine&#x2F;neovim&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;rose-pine&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cmd(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;colorscheme rose-pine&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now you can change it colorschema &lt;code&gt;:coloschema rose-pine-main&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgejqL4HwbMUBTGYfUMEqH5z7FfGzzfszcrfdyqJb4bnlt9XjdX11z7LfPIifCg7zudPcvF9GifS0E35o1uCSVJxFuO_HjUWNO96nWBr2Xn4q2oGoo9fyDrEqGdEaG5A2wkZ2MSwDKSGru7mmB2FRPhQtrkqrIybQAuHhfQYdqCRFf7vXUGCCiCrU7z-Nth&amp;#x2F;s1364&amp;#x2F;pic-window-240914-0003-57.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgejqL4HwbMUBTGYfUMEqH5z7FfGzzfszcrfdyqJb4bnlt9XjdX11z7LfPIifCg7zudPcvF9GifS0E35o1uCSVJxFuO_HjUWNO96nWBr2Xn4q2oGoo9fyDrEqGdEaG5A2wkZ2MSwDKSGru7mmB2FRPhQtrkqrIybQAuHhfQYdqCRFf7vXUGCCiCrU7z-Nth&amp;#x2F;s1364&amp;#x2F;pic-window-240914-0003-57.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h4 id=&quot;transparent-background&quot;&gt;Transparent Background&lt;&#x2F;h4&gt;
&lt;p&gt;here i want traspraent background&lt;&#x2F;p&gt;
&lt;p&gt;create a file colors.lua
at ~&#x2F;.config&#x2F;nvim&#x2F;after&#x2F;pulgin&#x2F;colors.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;ColorMyPencils&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;color &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;color &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;rose-pine&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.cmd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;colorscheme(color)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.api.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;nvim_set_hl(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Normal&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;bg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;none&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.api.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;nvim_set_hl(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;NormalFloat&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;bg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;none&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ColorMyPencils()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After transparenting  background .
it will look beautiful &lt;code&gt;&amp;gt;&amp;lt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhOsNuiNiR_5Veu1EeTXOMG7VpQyxUUZS2QHeTzo24faCL6KEfAyjYuKglYez31zHjxtAh_n13I9cKNDOnFJQLGK5bmQVe_VAa6vYorLG4eCpRhxYmUIy7CEWH54yZLw9RzQG2ceSDzFnHS1WnaqMkeJTrGUEpqFDuTYPyL4LNC97rM-WlDsM47w8wD5yyF&amp;#x2F;s1365&amp;#x2F;pic-selected-240914-1406-41.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhOsNuiNiR_5Veu1EeTXOMG7VpQyxUUZS2QHeTzo24faCL6KEfAyjYuKglYez31zHjxtAh_n13I9cKNDOnFJQLGK5bmQVe_VAa6vYorLG4eCpRhxYmUIy7CEWH54yZLw9RzQG2ceSDzFnHS1WnaqMkeJTrGUEpqFDuTYPyL4LNC97rM-WlDsM47w8wD5yyF&amp;#x2F;s1365&amp;#x2F;pic-selected-240914-1406-41.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h4 id=&quot;add-tree-sitter&quot;&gt;Add tree sitter&lt;&#x2F;h4&gt;
&lt;p&gt;Add this line in your packer.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;nvim-treesitter&#x2F;nvim-treesitter&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;:TSUpdate&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Save the file &lt;code&gt;:w&lt;&#x2F;code&gt; and comple it &lt;code&gt;:so&lt;&#x2F;code&gt; and run Packer &lt;code&gt;:PackerSync&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;copy this line and paste it in
~&#x2F;.config&#x2F;nvim&#x2F;after&#x2F;pulgin&#x2F;tree-sitter.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;nvim-treesitter.configs&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setup {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- A list of parser names, or &amp;quot;all&amp;quot; (the listed parsers MUST always be installed)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;ensure_installed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;lua&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;vim&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;vimdoc&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;query&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;markdown&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;markdown_inline&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;javascript&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;rust&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;typescript&amp;quot;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;},
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Install parsers synchronously (only applied to `ensure_installed`)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;sync_install &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Automatically install missing parsers when entering buffer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Recommendation: set to false if you don&amp;#39;t have `tree-sitter` CLI installed locally
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;auto_install &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;highlight &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;enable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Setting this to true will run `:h syntax` and tree-sitter at the same time.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Set this to `true` if you depend on &amp;#39;syntax&amp;#39; being enabled (like for indentation).
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Using this option may slow down your editor, and you may see some duplicate highlights.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;-- Instead of true it can also be a list of languages
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;additional_vim_regex_highlighting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  },
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Save the file &lt;code&gt;:w&lt;&#x2F;code&gt; and comple it &lt;code&gt;:so&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Add this line in your packer.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;nvim-treesitter&#x2F;playground&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Save the file &lt;code&gt;:w&lt;&#x2F;code&gt; and comple it &lt;code&gt;:so&lt;&#x2F;code&gt; and run packer &lt;code&gt;PackerSync&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;you can able to run &lt;code&gt;:TSPlaygroundToggle&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;add-harrpon&quot;&gt;Add harrpon&lt;&#x2F;h4&gt;
&lt;p&gt;Add this line in you Packer&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;ThePrimeagen&#x2F;harpoon&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;same as above&lt;&#x2F;p&gt;
&lt;p&gt;Now create a file harpoon.lua
at ~&#x2F;.config&#x2F;nvim&#x2F;after&#x2F;harpoon.lua
paste this&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;mark &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;harpoon.mark&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ui &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;harpoon.ui&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;leader&amp;gt;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, mark.add_file)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;leader&amp;gt;as&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, ui.toggle_quick_menu)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;C-a&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;() ui.nav_file(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;C-s&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;() ui.nav_file(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;C-u&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;() ui.nav_file(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;lt;C-i&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;() ui.nav_file(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and save it and complie it
Now can switch one file to another very fast&lt;&#x2F;p&gt;
&lt;p&gt;Here How ?&lt;&#x2F;p&gt;
&lt;p&gt;when i press &lt;code&gt;spacebar a&lt;&#x2F;code&gt; means to add  file in nav
now press &lt;code&gt;spacebar pf&lt;&#x2F;code&gt; serach file you want to access and go to that file and&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgcP_RVinVABBKu0SGZlujBo_Q23zkXH8HVQDQ2OKUDblsV4wnF12o3twD_BeGHrUTx3lBY5FNTwVIGn5vndjd68MY7NX3D3llE8bLmHwn52PyMJAWP9M-qiLBm873TiwvL5T4E-jdIa2G-cv7M_wNgQv7WZ3_RQn89nemPZVgMTCXj_byvkmyW1kwTLt5F&amp;#x2F;s1366&amp;#x2F;pic-window-240914-1648-01.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEgcP_RVinVABBKu0SGZlujBo_Q23zkXH8HVQDQ2OKUDblsV4wnF12o3twD_BeGHrUTx3lBY5FNTwVIGn5vndjd68MY7NX3D3llE8bLmHwn52PyMJAWP9M-qiLBm873TiwvL5T4E-jdIa2G-cv7M_wNgQv7WZ3_RQn89nemPZVgMTCXj_byvkmyW1kwTLt5F&amp;#x2F;s1366&amp;#x2F;pic-window-240914-1648-01.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;press &lt;code&gt;spacebar a&lt;&#x2F;code&gt; now press &lt;code&gt;spacebar as&lt;&#x2F;code&gt; now and see two file that you selected&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi2xPB2PCKSyBSns_7B_oul-uwHJ47D7RgN2RW-mqKCFVs6aAOt6pMzLqjJ0qpPZH3qPpsHwb00YSCBtV5yoN0Q1MXr2Xsah0EidZBbXJnB-Ulls-D1VQms6yI5Y7e4FUorI8nLiJ6yjk07nwE9dQQFcnRz2i45d8fsFMszRdUy-hGv4nUjcDi6nJrp24Sp&amp;#x2F;s1363&amp;#x2F;pic-selected-240914-1652-13.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi2xPB2PCKSyBSns_7B_oul-uwHJ47D7RgN2RW-mqKCFVs6aAOt6pMzLqjJ0qpPZH3qPpsHwb00YSCBtV5yoN0Q1MXr2Xsah0EidZBbXJnB-Ulls-D1VQms6yI5Y7e4FUorI8nLiJ6yjk07nwE9dQQFcnRz2i45d8fsFMszRdUy-hGv4nUjcDi6nJrp24Sp&amp;#x2F;s1363&amp;#x2F;pic-selected-240914-1652-13.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;now you can switch using &lt;code&gt;Ctrl + a&lt;&#x2F;code&gt; and &lt;code&gt;Ctrl + s&lt;&#x2F;code&gt; and thats very quick&lt;&#x2F;p&gt;
&lt;p&gt;or you can use &lt;code&gt;spacebar as&lt;&#x2F;code&gt; to switch&lt;&#x2F;p&gt;
&lt;h4 id=&quot;add-undotree&quot;&gt;Add undotree&lt;&#x2F;h4&gt;
&lt;p&gt;add this line in your packer&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;use (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;mbbill&#x2F;undotree&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;then save it and complie it&lt;&#x2F;p&gt;
&lt;p&gt;now create a file undotree.lua
~&#x2F;.config&#x2F;nvim&#x2F;after&#x2F;plugin&#x2F;undotree.lua&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt;.keymap.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;set(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;lt;leader&amp;gt;u&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, vim.cmd.UndotreeToggle)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;save this file and complie it&lt;&#x2F;p&gt;
&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h4&gt;
&lt;p&gt;Hope this helps you to understand who things works
I also want to add lsp but i still confuse how to configure so if i fully understand then i will update it.&lt;&#x2F;p&gt;
&lt;p&gt;I try my best to make things simple
see you in another blog :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why I Use the GPL</title>
        <published>2025-09-10T00:00:00+00:00</published>
        <updated>2025-09-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/blog/why-i-use-the-gpl/"/>
        <id>https://mukund.xyz/blog/why-i-use-the-gpl/</id>
        
        <content type="html" xml:base="https://mukund.xyz/blog/why-i-use-the-gpl/">&lt;h1 id=&quot;why-i-use-the-gpl-and-how-it-protects-my-code&quot;&gt;Why I Use the GPL (and How It Protects My Code)&lt;&#x2F;h1&gt;
&lt;p&gt;As a developer, one of the most important decisions you make when publishing code is &lt;strong&gt;which license to use&lt;&#x2F;strong&gt;. Personally, I choose the &lt;strong&gt;GNU General Public License v3 (GPLv3)&lt;&#x2F;strong&gt; for nearly all of my projects.&lt;&#x2F;p&gt;
&lt;p&gt;Here’s why, and what you can do if someone tries to steal your code or claim it as their own.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;why-the-gpl&quot;&gt;Why the GPL?&lt;&#x2F;h2&gt;
&lt;p&gt;The GPL is a &lt;strong&gt;copyleft license&lt;&#x2F;strong&gt;. That means:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Anyone can run, study, modify, and share your code.&lt;&#x2F;li&gt;
&lt;li&gt;But if they &lt;strong&gt;redistribute&lt;&#x2F;strong&gt; it (modified or not), they must:
&lt;ul&gt;
&lt;li&gt;Keep your copyright and license notice.&lt;&#x2F;li&gt;
&lt;li&gt;Release their modifications under the GPL as well.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This ensures that your work &lt;strong&gt;stays free and open source forever&lt;&#x2F;strong&gt;. No company can legally close-source it, rebrand it, and sell it back to you.&lt;&#x2F;p&gt;
&lt;p&gt;By contrast, &lt;strong&gt;permissive licenses&lt;&#x2F;strong&gt; (MIT, BSD, Apache, etc.) allow redistribution without that requirement. Someone can take your code, hide the source, and profit from it without giving anything back.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;you can read the full GPLv3 text here:
https:&#x2F;&#x2F;www.gnu.org&#x2F;licenses&#x2F;gpl-3.0.en.html&lt;&#x2F;p&gt;
&lt;p&gt;also check lukesmith.xyz article on
&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;lukesmith.xyz&#x2F;articles&#x2F;why-i-use-the-gpl-and-not-cuck-licenses&#x2F;&quot;&gt;why he uses gpl&lt;&#x2F;a&gt;
i have added some points from his article below&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-not-mit-bsd-inspired-by-luke-smith-s-cuck-licenses-essay&quot;&gt;Why Not MIT&#x2F;BSD? (Inspired by Luke Smith’s “Cuck Licenses” Essay)&lt;&#x2F;h2&gt;
&lt;p&gt;Permissive licenses (commonly referred to as “cuck licenses”) like the MIT license allow others to modify your software and release it under an unfree license. Copyleft licenses (like the Gnu General Public License) mandate that all derivative works remain free.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;preview.redd.it&amp;#x2F;gpl-gigachad-v0-lfsxe7pwpgda1.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f72b1d0db28eed57a3670ab3ccfe9d4602ebdfea&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Meme&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;preview.redd.it&amp;#x2F;gpl-gigachad-v0-lfsxe7pwpgda1.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f72b1d0db28eed57a3670ab3ccfe9d4602ebdfea&quot;
       alt=&quot;Meme&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Some developers argue that MIT or BSD licenses are “freer” because they impose fewer restrictions.&lt;br &#x2F;&gt;
But as Luke Smith argued in his well-known essay &lt;em&gt;“Why I Use the GPL and Not Cuck Licenses”&lt;&#x2F;em&gt;, permissive licenses often end up serving corporations rather than communities.&lt;&#x2F;p&gt;
&lt;p&gt;Key takeaways from his perspective:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MIT&#x2F;BSD are corporate-friendly&lt;&#x2F;strong&gt; – They let companies take your code, close it, and profit without giving anything back.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GPL enforces reciprocity&lt;&#x2F;strong&gt; – If someone improves your work, they must share it under the same license.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Freedom vs exploitation&lt;&#x2F;strong&gt; – MIT&#x2F;BSD give companies the freedom to exploit, while GPL ensures users’ freedom to study, share, and improve software.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Real-world consequences&lt;&#x2F;strong&gt; – For example, MINIX (released under BSD) was silently used inside Intel processors for their Management Engine, now seen as a security risk. If it had been GPL, Intel would’ve had to release the source.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Respect and protection&lt;&#x2F;strong&gt; – GPL enforces credit and sharing. MIT&#x2F;BSD only rely on goodwill.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;lemmy.world&amp;#x2F;pictrs&amp;#x2F;image&amp;#x2F;9a59b61d-20a4-4f40-9c30-bc273a20dfdd.webp?format=webp&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Meme&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;lemmy.world&amp;#x2F;pictrs&amp;#x2F;image&amp;#x2F;9a59b61d-20a4-4f40-9c30-bc273a20dfdd.webp?format=webp&quot;
       alt=&quot;Meme&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Context:&lt;&#x2F;p&gt;
&lt;p&gt;Andrew Tanenbaum developed MINIX, a modular operating system kernel. Intel went ahead and used it to build Management Engine, arguably one of the most widespread and invasive pieces of malware in the world, without even as much as telling him. There’s nothing Tanenbaum could do, since the MIT license allows this.&lt;&#x2F;p&gt;
&lt;p&gt;Erik Andersen is one of the developers of Busybox, a minimal implementation of that’s suited for embedded systems. Many companies tried to steal his code and distribute it with their unfree products, but since it’s protected under the GPL, Busybox developers &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;BusyBox#GPL_lawsuits&quot;&gt;were able to sue&lt;&#x2F;a&gt; them and gain some money in the process.&lt;&#x2F;p&gt;
&lt;p&gt;Interestingly enough, Tanenbaum &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cs.vu.nl&#x2F;~ast&#x2F;intel&#x2F;&quot;&gt;doesn’t seem to mind&lt;&#x2F;a&gt; what intel did. But there are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;donatstudios.com&#x2F;License-Grumbles&quot;&gt;some examples&lt;&#x2F;a&gt; out there of people regretting releasing their work under a permissive license.&lt;&#x2F;p&gt;
&lt;p&gt;References:
https:&#x2F;&#x2F;lemmy.world&#x2F;comment&#x2F;10690861&lt;&#x2F;p&gt;
&lt;p&gt;In short: permissive licenses can look generous, but they make it easier for your work to be absorbed into proprietary systems. GPL prevents that.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;what-if-someone-claims-my-code-as-theirs&quot;&gt;What If Someone Claims My Code as Theirs?&lt;&#x2F;h2&gt;
&lt;p&gt;This isn’t really “software piracy” — it’s &lt;strong&gt;plagiarism or license violation&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, both GPL and MIT&#x2F;BSD already protect you:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GPL:&lt;&#x2F;strong&gt; They must keep your name and license notice. Removing it = license violation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MIT&#x2F;BSD:&lt;&#x2F;strong&gt; They must credit you too. If they remove attribution, that’s also a violation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;No license&#x2F;public domain:&lt;&#x2F;strong&gt; You have no protection; anyone can claim it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So as long as you choose a license, you’re covered.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;shield-what-actions-can-you-take&quot;&gt;🛡️ What Actions Can You Take?&lt;&#x2F;h2&gt;
&lt;p&gt;Here’s a step-by-step &lt;strong&gt;action checklist&lt;&#x2F;strong&gt; if you find a violation:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;step-1-gather-evidence&quot;&gt;Step 1: Gather Evidence&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Save screenshots of your repo with timestamps.&lt;&#x2F;li&gt;
&lt;li&gt;Save screenshots&#x2F;links of the infringing project.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;step-2-contact-them&quot;&gt;Step 2: Contact Them&lt;&#x2F;h3&gt;
&lt;p&gt;Send a polite but firm notice. Example:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Your project [link] uses my code from [link] but does not comply with GPLv3. Please restore attribution and comply with the license within 7 days.”&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;step-3-public-exposure&quot;&gt;Step 3: Public Exposure&lt;&#x2F;h3&gt;
&lt;p&gt;If ignored, make it public. Post an issue or blog about the violation. Communities often side with the original author.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;step-4-dmca-takedown&quot;&gt;Step 4: DMCA Takedown&lt;&#x2F;h3&gt;
&lt;p&gt;File a takedown with the hosting platform (GitHub, GitLab, etc.).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub DMCA portal: https:&#x2F;&#x2F;github.com&#x2F;github&#x2F;dmca&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;step-5-legal-enforcement&quot;&gt;Step 5: Legal Enforcement&lt;&#x2F;h3&gt;
&lt;p&gt;If it’s a company profiting from your work:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Send a &lt;strong&gt;cease-and-desist letter&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;If needed, escalate to a copyright infringement lawsuit.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;strong&gt;Free Software Foundation (FSF)&lt;&#x2F;strong&gt; can sometimes assist with GPL cases: https:&#x2F;&#x2F;www.fsf.org&#x2F;licensing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;ready-to-use-templates&quot;&gt;Ready-to-Use Templates&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;email-to-violator&quot;&gt;Email to Violator&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Subject: License Violation Notice – [Your Project Name]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Hello [Name&#x2F;Team],
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;I am the copyright holder of [Project Name], published at [repo link].  
&lt;&#x2F;span&gt;&lt;span&gt;Your project [violating project link] uses my code but does not comply with [GPLv3&#x2F;MIT].  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Please restore attribution and comply with the license within 7 days.  
&lt;&#x2F;span&gt;&lt;span&gt;If not, I will escalate with a DMCA request and legal action.  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Sincerely,  
&lt;&#x2F;span&gt;&lt;span&gt;[Your Name]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dmca-takedown-request&quot;&gt;DMCA Takedown Request&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;To: [Hosting Platform DMCA Email]
&lt;&#x2F;span&gt;&lt;span&gt;Subject: DMCA Takedown Request – Unauthorized Use of [Project Name]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;I am the copyright holder of [Project Name], originally at [repo link].  
&lt;&#x2F;span&gt;&lt;span&gt;The repository [infringing link] contains my code without license compliance.  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;I request removal of this repository.  
&lt;&#x2F;span&gt;&lt;span&gt;This claim is made in good faith and under penalty of perjury.  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Name: [Your Full Name]  
&lt;&#x2F;span&gt;&lt;span&gt;Email: [Your Email]  
&lt;&#x2F;span&gt;&lt;span&gt;Signature: [Your Name]
&lt;&#x2F;span&gt;&lt;span&gt;Date: [Date]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Choosing the GPL is not just about protecting yourself — it’s about protecting users’ freedom.&lt;&#x2F;p&gt;
&lt;p&gt;With GPL, your work remains open, and violators risk real legal consequences.&lt;&#x2F;p&gt;
&lt;p&gt;With MIT&#x2F;BSD, your name must stay, but your code can still be locked away inside proprietary software.&lt;&#x2F;p&gt;
&lt;p&gt;With no license, you give up all control.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;If you value freedom, recognition, and fairness in software, the GPL is your strongest tool.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>90 Days of Learning React</title>
        <published>2025-07-19T00:00:00+00:00</published>
        <updated>2025-07-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/notes/90-days-of-learing-react/"/>
        <id>https://mukund.xyz/notes/90-days-of-learing-react/</id>
        
        <content type="html" xml:base="https://mukund.xyz/notes/90-days-of-learing-react/">&lt;p&gt;This blog is where I will document my journey of learning React over the next 90 days. Each day, I will focus on a specific topic or concept, and share my notes, code snippets, and resources.&lt;&#x2F;p&gt;
&lt;a href=&quot;&amp;#x2F;images&amp;#x2F;react-logo.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;React Logo&quot;&gt;
  &lt;img src=&quot;&amp;#x2F;images&amp;#x2F;react-logo.png&quot;
       alt=&quot;React Logo&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h2 id=&quot;day-1-introduction-to-react&quot;&gt;Day 1: Introduction to React&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;What is React?&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;A JavaScript library for building user interfaces.&lt;&#x2F;li&gt;
&lt;li&gt;Developed by Facebook and released in 2013.&lt;&#x2F;li&gt;
&lt;li&gt;Focuses on building reusable UI components.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Key Features:&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Virtual DOM for efficient rendering.&lt;&#x2F;li&gt;
&lt;li&gt;Component-based architecture.&lt;&#x2F;li&gt;
&lt;li&gt;Single Page Application (SPA) capabilities.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;setup-and-installation&quot;&gt;Setup and Installation&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Install Node.js and npm.&lt;&#x2F;li&gt;
&lt;li&gt;Create a new React app using Create React App:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;npx create-react-app my-app
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; my-app
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;npm start
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Alternatively, you can set up a React project using Vite for faster development:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;npm create vite@latest my-app --template React
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; my-app
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;npm install 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;npm run dev 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Structure of a React App:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;plaintext&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-plaintext &quot;&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;span&gt;├── eslint.config.js
&lt;&#x2F;span&gt;&lt;span&gt;├── index.html
&lt;&#x2F;span&gt;&lt;span&gt;├── package.json
&lt;&#x2F;span&gt;&lt;span&gt;├── package-lock.json
&lt;&#x2F;span&gt;&lt;span&gt;├── public
&lt;&#x2F;span&gt;&lt;span&gt;│   └── vite.svg
&lt;&#x2F;span&gt;&lt;span&gt;├── README.md
&lt;&#x2F;span&gt;&lt;span&gt;├── src
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── App.jsx
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── main.jsx
&lt;&#x2F;span&gt;&lt;span&gt;│   └── Nav.jsx
&lt;&#x2F;span&gt;&lt;span&gt;└── vite.config.jsx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;day-2-jsx-and-rendering-elements&quot;&gt;Day 2: JSX and Rendering Elements&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;jsx-javascript-xml&quot;&gt;JSX (JavaScript XML)&lt;&#x2F;h3&gt;
&lt;p&gt;App.jsx&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;React &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;App
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;App&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Hello&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;World&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nav.jsx&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;React &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;react&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Nav 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Nav&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Nav Bar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;main.jsx&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;StrictMode &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;createRoot &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react-dom&#x2F;client&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;App &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;App.jsx&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Nav &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;Nav.jsx&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;createRoot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;root&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;StrictMode&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;App &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Nav &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;StrictMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;key-points&quot;&gt;Key Points&lt;&#x2F;h3&gt;
&lt;p&gt;Component should  start with an uppercase letter, and the file name should match the component name. This is a convention in React to differentiate components from regular HTML elements.&lt;&#x2F;p&gt;
&lt;p&gt;We can name both App.js &amp;amp; App.jsx but in vite development environment we have to use jsx&lt;&#x2F;p&gt;
&lt;p&gt;We can return only one component by a jsx function so it’s good to wrap in &amp;lt;&amp;gt;&amp;lt;&#x2F;&amp;gt; or &lt;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;day-3-create-own-custom-components&quot;&gt;Day 3: Create own Custom components&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;creating-custom-components&quot;&gt;Creating Custom components&lt;&#x2F;h3&gt;
&lt;p&gt;script.js&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;rootElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;root&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;reactElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	props: {
&lt;&#x2F;span&gt;&lt;span&gt;		href: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;mukund.xyz&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;		_target: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;_blank&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	},
&lt;&#x2F;span&gt;&lt;span&gt;	children: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;Visit mukund.xyz&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;CreateReactElement&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;reactElement&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;rootElement&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;CreateReactElement&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;container&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;domElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;createElement&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;domElement&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;textContent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;children&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;props&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;children&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;continue&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;domElement.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;setAttribute&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prop&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;props&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prop&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;container.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;appendChild&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;domElement&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;index.html&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;lang=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;charset=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;name=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;viewport&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;content=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;href=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;css&#x2F;style.css&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;rel=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;root&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;			
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;src=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;script.js&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#8ec07c;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#83a598;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Create a custom component in React that renders an anchor tag with a link to your website.&lt;&#x2F;p&gt;
&lt;p&gt;main.jsx&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;React &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;createRoot &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react-dom&#x2F;client&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;reactElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;React.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;createElement&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    href: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;mukund.xyz&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    target: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;_blank&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  },
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;Visit mukund.xyz&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;createRoot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;root&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;reactElement
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;days-4-hooks-and-state-management&quot;&gt;Days 4 Hooks and State Management&lt;&#x2F;h2&gt;
&lt;p&gt;Hooks are functions that let you use state and other React features in functional components. They allow you to manage state, lifecycle events, and side effects without writing class components.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;useState Hook&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Allows you to add state to functional components.&lt;&#x2F;li&gt;
&lt;li&gt;Returns an array with the current state and a function to update it.&lt;&#x2F;li&gt;
&lt;li&gt;Hooks can’t be called inside loops, conditions, or nested functions. They should be called at the top level of your component.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;day-5-virtual-dom-and-reconciliation&quot;&gt;Day 5: Virtual DOM and Reconciliation&lt;&#x2F;h2&gt;
&lt;p&gt;React Fiber Architecture is an ongoing reimplementation of React’s core algorithm. It is the culmination of over two years of research by the React team.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;virtual-dom&quot;&gt;Virtual dom&lt;&#x2F;h3&gt;
&lt;p&gt;Virtual DOM (VDOM) is a programming concept where a virtual representation of the UI is kept in memory and synced with the real DOM by a library such as ReactDOM. This process is called reconciliation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-is-reconciliation&quot;&gt;What is reconciliation?&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;The algorithm React uses to diff(differentiate) one tree with another to determine which parts need to be changed.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;reconciliation&lt;&#x2F;strong&gt; is the process through which React updates the DOM. When a component’s state or props change, React creates a new Virtual DOM tree and compares it with the previous one. It then calculates the most efficient way to update the real DOM to match the new Virtual DOM.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;key-terms&quot;&gt;Key Terms&lt;&#x2F;h3&gt;
&lt;p&gt;Other key features include the&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;ability to pause&lt;&#x2F;strong&gt;,
&lt;strong&gt;abort&lt;&#x2F;strong&gt;, or &lt;strong&gt;reuse work as new updates come in&lt;&#x2F;strong&gt;
&lt;strong&gt;the ability to assign priority to different types of updates&lt;&#x2F;strong&gt;
and new concurrency primitives.&lt;&#x2F;p&gt;
&lt;p&gt;The algorithm React uses to diff one tree with another to determine which parts need to be changed.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;media.geeksforgeeks.org&amp;#x2F;wp-content&amp;#x2F;uploads&amp;#x2F;20241212235246933476&amp;#x2F;Browser-DOM-Virtual-DOM.webp&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Online Image Example&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;media.geeksforgeeks.org&amp;#x2F;wp-content&amp;#x2F;uploads&amp;#x2F;20241212235246933476&amp;#x2F;Browser-DOM-Virtual-DOM.webp&quot;
       alt=&quot;Online Image Example&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;&lt;strong&gt;Reconciliation is the algorithm behind what is popularly understood as the “virtual DOM.”&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A high-level description goes something like this: when you render a React application, a tree of nodes that describes the app is generated and saved in memory. This tree is then flushed to the rendering environment — for example, in the case of a browser application, it’s translated to a set of DOM operations. When the app is updated (usually via setState), a new tree is generated. The new tree is diffed with the previous tree to compute which operations are needed to update the rendered app.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Although Fiber is a ground-up rewrite of the reconciler, the high-level algorithm described in the React docs will be largely the same.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The key points are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Different component types are assumed to generate substantially different trees. React will not attempt to diff them, but rather replace the old tree completely.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Diffing of lists is performed using keys. Keys should be “stable, predictable, and unique.”&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;in-array-why-keys-should-be-introduced&quot;&gt;In Array Why keys should be introduced?&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;In Fiber algorithm if we want to impove performance of list when itrating over array of items  we should use keys.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;When React sees a list of elements, it needs to determine which items have changed, been added, or been removed. Keys help React identify which items in the list correspond to which elements in the previous render.&lt;&#x2F;p&gt;
&lt;p&gt;Scheduling&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the process of determining when work should be performed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The key points are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;In a UI, it’s not necessary for every update to be applied immediately; in fact, doing so can be wasteful, causing frames to drop and degrading the user experience.&lt;&#x2F;li&gt;
&lt;li&gt;Different types of updates have different priorities — an animation update needs to complete more quickly than, say, an update from a data store.&lt;&#x2F;li&gt;
&lt;li&gt;A push-based approach requires the app (you, the programmer) to decide how to schedule work. A pull-based approach allows the framework (React) to be smart and make those decisions for you.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-is-a-fiber&quot;&gt;What is a fiber?&lt;&#x2F;h3&gt;
&lt;p&gt;We’ve established that a primary goal of Fiber is to enable React to take advantage of scheduling. Specifically, we need to be able to&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;pause work and come back to it later.&lt;&#x2F;li&gt;
&lt;li&gt;assign priority to different types of work.&lt;&#x2F;li&gt;
&lt;li&gt;reuse previously completed work.&lt;&#x2F;li&gt;
&lt;li&gt;abort work if it’s no longer needed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;structure-of-a-fiber&quot;&gt;Structure of a Fiber&lt;&#x2F;h3&gt;
&lt;p&gt;In concrete terms, a fiber is a JavaScript object that contains information about a component, its input, and its output.&lt;&#x2F;p&gt;
&lt;p&gt;A fiber corresponds to a stack frame, but it also corresponds to an instance of a component.&lt;&#x2F;p&gt;
&lt;p&gt;Here are some of the important fields that belong to a fiber. (This list is not exhaustive.)
&lt;code&gt;type&lt;&#x2F;code&gt; and &lt;code&gt;key&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;day-6-props-for-component-communication&quot;&gt;Day 6: Props for  Component Communication&lt;&#x2F;h2&gt;
&lt;p&gt;Props (short for “properties”) are a way to pass data from a parent component to a child component in React. They are read-only and cannot be modified by the child component.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;function-and-class-components&quot;&gt;Function and Class Components&lt;&#x2F;h4&gt;
&lt;p&gt;The simplest way to define a component is to write a JavaScript function:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;props&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Hello&lt;&#x2F;span&gt;&lt;span&gt;, {props.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This function is a valid React component because it accepts a single “props” (which stands for properties) object argument with data and returns a React element. &lt;code&gt;We call such components “function components” because they are literally JavaScript functions.&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can also use an &lt;code&gt;ES6&lt;&#x2F;code&gt; class to define a component:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Welcome &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;React&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Component &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Hello&lt;&#x2F;span&gt;&lt;span&gt;, {this.props.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The above two components are equivalent from React’s point of view.&lt;&#x2F;p&gt;
&lt;p&gt;How to create Parents and Child components using props&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ParentCard.jsx&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Card &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;.&#x2F;Card&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;ParentCard&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;products &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      name: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Apple Watch&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      price: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$899&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      stock: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;In Stock&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      img: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;files.refurbed.com&#x2F;ii&#x2F;apple-watch-series-7-titan-45mm-1705929512.jpg&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      name: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Samsung Galaxy Watch&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      price: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$699&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      stock: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Only 3 Left&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      img: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;m.media-amazon.com&#x2F;images&#x2F;I&#x2F;71Swqqe7XAL._AC_UL600_FMwebp_QL65_.jpg&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      name: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Noise Smartwatch&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      price: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$199&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      stock: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Out of Stock&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      img: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;sell.gameloot.in&#x2F;wp-content&#x2F;uploads&#x2F;sites&#x2F;4&#x2F;2022&#x2F;05&#x2F;Samsung-Galaxy-Watch-4-Classic-LTE-42mm.jpg&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  ];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;container mx-auto grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 p-5&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;products&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;product&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;index&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Card key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;index&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;productData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;product&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      ))}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  );
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ParentCard&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Card.jsx&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Card&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;props&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;props&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;productData&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;default Watch &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$899&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;stock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Out of Stock&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;img&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;files.refurbed.com&#x2F;ii&#x2F;apple-watch-series-7-titan-45mm-1705929512.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;obj&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;max-w-sm rounded overflow-hidden shadow-lg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;img className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;w-full h-64 object-cover&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;img&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;px-6 py-4&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;font-bold text-xl mb-2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;p className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-gray-700 text-base&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Price&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt;}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;p className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;`text-base ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;stock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;In Stock&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-green-500&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;stock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Only 3 Left&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-yellow-500&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-red-500&amp;quot;}`&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;stock&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;px-6 pt-4 pb-2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Buy Now
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;day-7-usestate-hook-in-depth&quot;&gt;Day 7: useState Hook in Depth&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;useState&lt;&#x2F;code&gt; hook is a fundamental building block in React that allows you to add state to functional components. It provides a way to manage and update state within your components without the need for class components.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Understanding State&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Definition: State is data in an application that changes over time . In React, this means data that can be different from one component render to another .&lt;&#x2F;p&gt;
&lt;p&gt;Importance: Tracking state is crucial for application functionality, such as showing a loading spinner while fetching data, displaying error messages, or handling the data itself .&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;The useState Hook&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Purpose: useState is the primary hook used in functional components to manage and manipulate state in React .&lt;&#x2F;p&gt;
&lt;p&gt;How to Import: You must import the hook from React: import { useState } from ‘react’ .&lt;&#x2F;p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;useState Syntax and Structure&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The hook is used by destructuring an array that contains two elements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;State Variable (count): The current value of the state .&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Updater Function (setCount): A function used to update the state variable .&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Naming Convention: By convention, the updater function is named set followed by the name of the state variable (e.g., setCount) .&lt;&#x2F;p&gt;
&lt;p&gt;Default Value: The value passed as an argument to useState() is the initial or default value of the state. If no value is provided, the state will be undefined .&lt;&#x2F;p&gt;
&lt;p&gt;JavaScript&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; Example: Initializing count with a default value of 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setCount&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;state&lt;&#x2F;code&gt;: The current state value.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;setState&lt;&#x2F;code&gt;: A function that allows you to update the state.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;initialState&lt;&#x2F;code&gt;: The initial value of the state.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;example-of-usestate-hook-for-background-color-change-on-button-click&quot;&gt;Example of useState Hook for Background Color Change on Button Click&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useState &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;App&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;colorbg&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Black&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;App&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{{ backgroundColor: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;colorbg&lt;&#x2F;span&gt;&lt;span&gt;, transition: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;background-color 0.5s ease&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, height: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;100vh&amp;#39; &lt;&#x2F;span&gt;&lt;span&gt;}}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1 className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-3xl font-bold text-center min-h-screen&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Background Color Change on Click
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;flex flex-row items-top justify-center p-10 gap-5 absolute top-10 w-full bg-white&#x2F;10 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-green hover:bg-green-700 text-white  font-bold py-2 px-4 rounded border&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{()=&amp;gt; {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Green&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Green&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Blue&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Blue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Red&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Red&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Yellow&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Yellow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Purple&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Purple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-pink-500 hover:bg-pink-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Pink&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Pink&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Gray&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Gray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-black hover:bg-black text-white font-bold py-2 px-4 rounded&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Black&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Black&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-white hover:bg-white text-black font-bold py-2 px-4 rounded border&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setColor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;White&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;White&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;App
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;explanation&quot;&gt;Explanation&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;We import the &lt;code&gt;useState&lt;&#x2F;code&gt; hook from React.&lt;&#x2F;li&gt;
&lt;li&gt;We define a functional component &lt;code&gt;App&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We use the &lt;code&gt;useState&lt;&#x2F;code&gt; hook to create a state variable &lt;code&gt;colorbg&lt;&#x2F;code&gt; with an initial value of “Black”.&lt;&#x2F;li&gt;
&lt;li&gt;We create buttons that, when clicked, update the &lt;code&gt;colorbg&lt;&#x2F;code&gt; state to different colors.&lt;&#x2F;li&gt;
&lt;li&gt;The background color of the &lt;code&gt;div&lt;&#x2F;code&gt; changes based on the current value of &lt;code&gt;colorbg&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;key-points-1&quot;&gt;Key points&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;useState&lt;&#x2F;code&gt; hook can be called multiple times in a single component to manage different pieces of state.&lt;&#x2F;li&gt;
&lt;li&gt;State updates are asynchronous, so the new state value may not be immediately available after calling the &lt;code&gt;setState&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;You can pass a function to the &lt;code&gt;setState&lt;&#x2F;code&gt; function if you need to update the state based on the previous state.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;example-of-updating-state-based-on-previous-state&quot;&gt;Example of updating state based on previous state&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setCount&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prevCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prevCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This ensures that you are working with the most up-to-date state value, especially when multiple state updates are queued.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;code&gt;useState&lt;&#x2F;code&gt; hook is a powerful and essential tool for managing state in React functional Components. It allows you to create dynamic and interactive user interfaces by enabling stateful behavior in your components.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;day-8-useeffect-useref-and-usecallback-hooks&quot;&gt;Day 8: useEffect, useRef and useCallback Hooks&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;useeffect-hook&quot;&gt;useEffect Hook&lt;&#x2F;h3&gt;
&lt;p&gt;What is &lt;code&gt;useEffect&lt;&#x2F;code&gt; ?
It is a hook from react to perform side effects in out application.
side effects you can think of about them as name implies  as things happening as consequence of something else happening in your application like fetching data from an API, setting up a subscription, or manually changing the DOM in React components.&lt;&#x2F;p&gt;
&lt;p&gt;how to use it ?&lt;&#x2F;p&gt;
&lt;p&gt;when to use it ?
how it works ?&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;useEffect&lt;&#x2F;code&gt; hook allows you to perform side effects in your functional components. Side effects can include data fetching, subscriptions, or manually changing the DOM. The &lt;code&gt;useEffect&lt;&#x2F;code&gt; hook runs after the component renders.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;syntax&quot;&gt;Syntax&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{}, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; Side effect code here 
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; optional return  function for cleanup
&lt;&#x2F;span&gt;&lt;span&gt;}, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The first argument is a function that contains the side effect code.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The second argument is an optional array of dependencies. The effect will only re-run if one of the dependencies has changed.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;it is guaranteed that the useEffect function will run at least once when our component mounts.And no matter what you pass as dependencies.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;useref-hook&quot;&gt;useRef Hook&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;code&gt;useRef&lt;&#x2F;code&gt; hook allows you to create a mutable reference that persists across renders. It can be used to access DOM elements directly or to store any mutable value that does not cause a re-render when updated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;syntax-1&quot;&gt;Syntax&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ref &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useRef&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;initialValue&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ref&lt;&#x2F;code&gt;: The mutable reference object.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;initialValue&lt;&#x2F;code&gt;: The initial value of the reference.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;usecallback-hook&quot;&gt;useCallback Hook&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;code&gt;useCallback&lt;&#x2F;code&gt; hook returns a memoized version of a callback function that only changes if one of the dependencies has changed. It is useful for optimizing performance by preventing unnecessary re-creations of functions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;syntax-2&quot;&gt;Syntax&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;memoizedCallback &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useCallback&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; Callback code here
&lt;&#x2F;span&gt;&lt;span&gt;}, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;The first argument is the callback function.&lt;&#x2F;li&gt;
&lt;li&gt;The second argument is an array of dependencies. The callback will only be re-created if one of the dependencies has changed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;example-using-useeffect-useref-and-usecallback&quot;&gt;Example using useEffect, useRef, and useCallback&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useRef&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useCallback &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;App.css&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;App&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setCount&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;countRef &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useRef&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;countRef&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;current &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;increment &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useCallback&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setCount&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prevCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prevCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  }, []);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;App&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1 className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-3xl font-bold underline&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useRef and useCallback Hooks&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;increment&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Increment Count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1 className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-3xl font-bold underline&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;day-9-project-password-generator-using-react&quot;&gt;Day 9: Project password generator using React&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;useEffect &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;react&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;App.css&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;App&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setLength&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setAllowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedNumber&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setAllowedNumber&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setPassword&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;randomNumber&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setRandomNumber&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;copied&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setCopied&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useState&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;generatePassword &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;chars &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;numbers &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;0123456789&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;symbols &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;!@#$%^&amp;amp;*()_-+=&amp;lt;&amp;gt;?&#x2F;{}~&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;chars&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;   		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedNumber&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;numbers&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;symbols&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;pass &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;randomIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;floor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;random&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowed&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;pass &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowed&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;randomIndex&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setPassword&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;pass&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;	};
&lt;&#x2F;span&gt;&lt;span&gt;         	 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;useEffect&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;generatePassword&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;	 	 }, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedNumber&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;copyToClipboard &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;   		 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;navigator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.clipboard.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;writeText&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;   		 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setCopied&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setCopied&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1500&lt;&#x2F;span&gt;&lt;span&gt;); &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; Reset &amp;quot;copied&amp;quot; message
&lt;&#x2F;span&gt;&lt;span&gt;  	};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1 className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;text-3xl font-bold  m-4 position-absolute top-0 &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Generator 
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;container bg-black border rounded-md p-4&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;box&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;input type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;text&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;readOnly name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;length&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;bg-white text-black w-90&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;}  &#x2F;&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;generatePassword&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;ml-2 bg-blue-500 text-white px-2 py-1 rounded&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Refresh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button    onClick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;copyToClipboard&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;bg-green-500 hover:bg-green-600 text-white px-2 py-1 rounded&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Copy  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;          {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;copied&lt;&#x2F;span&gt;&lt;span&gt; &amp;amp;&amp;amp; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;span className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;text-green-400 ml-2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Copied&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;	        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;container flex flex-col content-center justify-start m-4 align-center&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	
&lt;&#x2F;span&gt;&lt;span&gt;	  	
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;box flex flex-row content-center  align-center m-1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  
&lt;&#x2F;span&gt;&lt;span&gt;	  		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;input type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;range&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;4&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;max&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;20&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;length&amp;#39;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;onChange&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;) =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setLength&lt;&#x2F;span&gt;&lt;span&gt;(e.target.value)} &#x2F;&amp;gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;} 
&lt;&#x2F;span&gt;&lt;span&gt;	  
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span&gt;	  		
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;box flex flex-row content-center justify-start m-1 align-center&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Charater &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;input type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;checkbox&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;length&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;checked&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;onChange&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{()=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setAllowedCharacter&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prev&lt;&#x2F;span&gt;&lt;span&gt;) =&amp;gt; !prev)} &#x2F;&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;box flex flex-row content-center justify-start m-1 align-center &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Numbers &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;input type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;checkbox&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;length&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;className&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;bg-white text-black&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;checked&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;allowedNumber&lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;onChange&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;{() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setAllowedNumber &lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prev&lt;&#x2F;span&gt;&lt;span&gt;) =&amp;gt; !prev)} &#x2F;&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;	  	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;App
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;explanation-1&quot;&gt;Explanation&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;We use the &lt;code&gt;useState&lt;&#x2F;code&gt; hook to manage various state variables such as &lt;code&gt;length&lt;&#x2F;code&gt;, &lt;code&gt;allowedCharacter&lt;&#x2F;code&gt;, &lt;code&gt;allowedNumber&lt;&#x2F;code&gt;, &lt;code&gt;password&lt;&#x2F;code&gt;, and &lt;code&gt;copied&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;generatePassword&lt;&#x2F;code&gt; function generates a random password based on the selected criteria.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;useEffect&lt;&#x2F;code&gt; hook is used to automatically generate a new password whenever the &lt;code&gt;length&lt;&#x2F;code&gt;, &lt;code&gt;allowedCharacter&lt;&#x2F;code&gt;, or &lt;code&gt;allowedNumber&lt;&#x2F;code&gt; state changes.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;copyToClipboard&lt;&#x2F;code&gt; function copies the generated password to the clipboard and shows a “Copied!” message for 1.5 seconds.&lt;&#x2F;li&gt;
&lt;li&gt;The UI includes input elements for selecting password length and options for including characters and numbers, as well as buttons for generating and copying the password.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How Single-CPU Systems Multitask</title>
        <published>2025-06-23T00:00:00+00:00</published>
        <updated>2025-06-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/notes/concurrency-is-not-what-you-think/"/>
        <id>https://mukund.xyz/notes/concurrency-is-not-what-you-think/</id>
        
        <content type="html" xml:base="https://mukund.xyz/notes/concurrency-is-not-what-you-think/">&lt;p&gt;Have you ever wondered how your computer can run multiple programs at the same time?&lt;&#x2F;p&gt;
&lt;p&gt;Most people think of &lt;strong&gt;multi-core CPUs&lt;&#x2F;strong&gt;, which is understandable with the marketing push from CPU manufacturers. However, the ability to multitask has been around &lt;strong&gt;since the days of single-core processors&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-historical-perspective&quot;&gt;A Historical Perspective&lt;&#x2F;h2&gt;
&lt;p&gt;Back in the 1980s, machines like the &lt;strong&gt;Commodore Amiga&lt;&#x2F;strong&gt; and &lt;strong&gt;Apple Macintosh&lt;&#x2F;strong&gt; could already run multiple programs at once—even with only &lt;strong&gt;one processor&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;upload.wikimedia.org&amp;#x2F;wikipedia&amp;#x2F;commons&amp;#x2F;thumb&amp;#x2F;c&amp;#x2F;c3&amp;#x2F;Amiga500_system.jpg&amp;#x2F;250px-Amiga500_system.jpg&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Online Image Example&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;upload.wikimedia.org&amp;#x2F;wikipedia&amp;#x2F;commons&amp;#x2F;thumb&amp;#x2F;c&amp;#x2F;c3&amp;#x2F;Amiga500_system.jpg&amp;#x2F;250px-Amiga500_system.jpg&quot;
       alt=&quot;Online Image Example&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;To understand how, we need to go back further.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mainframes-and-limited-access&quot;&gt;Mainframes and Limited Access&lt;&#x2F;h3&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;media.wired.com&amp;#x2F;photos&amp;#x2F;59329428a312645844995f4d&amp;#x2F;master&amp;#x2F;w_1600,c_limit&amp;#x2F;AP120305028348.jpg&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Online Image Example&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;media.wired.com&amp;#x2F;photos&amp;#x2F;59329428a312645844995f4d&amp;#x2F;master&amp;#x2F;w_1600,c_limit&amp;#x2F;AP120305028348.jpg&quot;
       alt=&quot;Online Image Example&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Early computers were massive and expensive machines called &lt;strong&gt;mainframes&lt;&#x2F;strong&gt;. They filled entire rooms and were only accessible to governments, big companies, and universities. Due to their high cost and complexity, &lt;strong&gt;computer time was highly valuable&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Operating a program on these machines wasn’t simple:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Load the compiler (often from magnetic tape).&lt;&#x2F;li&gt;
&lt;li&gt;Input the source code (e.g., in Fortran).&lt;&#x2F;li&gt;
&lt;li&gt;Generate Assembly code.&lt;&#x2F;li&gt;
&lt;li&gt;Use an assembler to produce machine code.&lt;&#x2F;li&gt;
&lt;li&gt;Finally, execute the program.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Each step involved manual tape mounting and waiting, during which the &lt;strong&gt;CPU sat idle&lt;&#x2F;strong&gt;, even though other users couldn’t access it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-birth-of-operating-systems&quot;&gt;The Birth of Operating Systems&lt;&#x2F;h3&gt;
&lt;p&gt;To improve efficiency, researchers created early &lt;strong&gt;operating systems&lt;&#x2F;strong&gt; that enabled &lt;strong&gt;multiple users&lt;&#x2F;strong&gt; to connect via devices like &lt;strong&gt;teletypes&lt;&#x2F;strong&gt; or &lt;strong&gt;dumb terminals&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This led to &lt;strong&gt;time-sharing&lt;&#x2F;strong&gt; systems, where the operating system would &lt;strong&gt;switch between users’ programs&lt;&#x2F;strong&gt;, keeping the CPU busy and maximizing the value of expensive computers.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;concurrency-in-single-cpu-systems&quot;&gt;Concurrency in Single-CPU Systems&lt;&#x2F;h2&gt;
&lt;p&gt;A &lt;strong&gt;CPU executes one instruction at a time&lt;&#x2F;strong&gt;, but it does so incredibly fast which gives the illusion of simultaneous execution. This is the core idea of &lt;strong&gt;concurrency&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even with one CPU, computers can appear to run many processes at once by rapidly switching between them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Systems like &lt;strong&gt;Multics&lt;&#x2F;strong&gt; (developed in the 1960s) were pioneers in this approach.&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;www.macos.utah.edu&amp;#x2F;documentation&amp;#x2F;short_courses&amp;#x2F;mac_os_x_overview&amp;#x2F;history_and_evolution&amp;#x2F;unix_history&amp;#x2F;mainColumnParagraphs&amp;#x2F;010&amp;#x2F;image&amp;#x2F;openstep1.jpg&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Online Image Example&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;www.macos.utah.edu&amp;#x2F;documentation&amp;#x2F;short_courses&amp;#x2F;mac_os_x_overview&amp;#x2F;history_and_evolution&amp;#x2F;unix_history&amp;#x2F;mainColumnParagraphs&amp;#x2F;010&amp;#x2F;image&amp;#x2F;openstep1.jpg&quot;
       alt=&quot;Online Image Example&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.macos.utah.edu&#x2F;documentation&#x2F;short_courses&#x2F;mac_os_x_overview&#x2F;history_and_evolution&#x2F;unix_history.html&quot;&gt;refrence&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Later, personal computers adopted similar techniques to serve multiple users, but to allow a &lt;strong&gt;single user to run multiple applications&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;how-cpus-execute-instructions&quot;&gt;How CPUs Execute Instructions&lt;&#x2F;h2&gt;
&lt;p&gt;At a low level, the CPU operates in a &lt;strong&gt;fetch-decode-execute&lt;&#x2F;strong&gt; cycle:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;address register&lt;&#x2F;strong&gt; holds the memory location of the next instruction.&lt;&#x2F;li&gt;
&lt;li&gt;The instruction is &lt;strong&gt;fetched&lt;&#x2F;strong&gt; and moved to the &lt;strong&gt;instruction register&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The CPU &lt;strong&gt;decodes and executes&lt;&#x2F;strong&gt; the instruction.&lt;&#x2F;li&gt;
&lt;li&gt;The address register is updated to point to the next instruction.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Jump instructions&lt;&#x2F;strong&gt; allow for loops and conditions, by modifying the address register manually.&lt;&#x2F;p&gt;
&lt;p&gt;This means programs don’t need to be split in memory—the &lt;strong&gt;operating system changes the CPU’s state&lt;&#x2F;strong&gt; to switch between processes.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;scheduling-and-process-management&quot;&gt;Scheduling and Process Management&lt;&#x2F;h2&gt;
&lt;p&gt;Once a program starts running, it becomes a &lt;strong&gt;process&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The OS uses a &lt;strong&gt;queue&lt;&#x2F;strong&gt; to manage all active processes. Two key components handle this:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scheduler&lt;&#x2F;strong&gt;: Determines which process should run next.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Dispatcher&lt;&#x2F;strong&gt;: Loads the selected process into the CPU.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;but-when-does-the-os-run&quot;&gt;But When Does the OS Run?&lt;&#x2F;h3&gt;
&lt;p&gt;Programs often rely on the OS for tasks like file access or memory allocation. These are handled through &lt;strong&gt;interruptions&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;When an &lt;strong&gt;interrupt&lt;&#x2F;strong&gt; occurs (e.g., from an I&#x2F;O request):&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The CPU saves the current process’s state.&lt;&#x2F;li&gt;
&lt;li&gt;It jumps to the &lt;strong&gt;interrupt service routine (ISR)&lt;&#x2F;strong&gt; in OS memory.&lt;&#x2F;li&gt;
&lt;li&gt;The OS handles the request and schedules the next process.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This is how the &lt;strong&gt;OS regains control&lt;&#x2F;strong&gt; of the CPU.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;the-problem-with-cooperative-scheduling&quot;&gt;The Problem With Cooperative Scheduling&lt;&#x2F;h2&gt;
&lt;p&gt;Originally, systems used &lt;strong&gt;cooperative scheduling&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A process keeps the CPU until it voluntarily gives it up.&lt;&#x2F;li&gt;
&lt;li&gt;This can lead to problems if a process enters an &lt;strong&gt;infinite loop&lt;&#x2F;strong&gt; with no I&#x2F;O.&lt;&#x2F;li&gt;
&lt;li&gt;The OS never regains control, potentially locking the system.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This method is insecure, especially with malicious programs.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;enter-preemptive-scheduling&quot;&gt;Enter Preemptive Scheduling&lt;&#x2F;h2&gt;
&lt;p&gt;To solve this, hardware support is essential.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;strong&gt;hardware timer&lt;&#x2F;strong&gt; is introduced:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Before assigning the CPU to a process, the OS sets the timer.&lt;&#x2F;li&gt;
&lt;li&gt;If the timer expires, it &lt;strong&gt;automatically triggers an interrupt&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;This forces the CPU to return control to the OS.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Preemptive scheduling allows the OS to &lt;strong&gt;interrupt any process&lt;&#x2F;strong&gt; and regain CPU control—even if the process doesn’t cooperate.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Modern systems, including versions of Windows from &lt;strong&gt;95 onward&lt;&#x2F;strong&gt;, use this method. Interestingly, &lt;strong&gt;Multics supported it in the 1960s&lt;&#x2F;strong&gt;!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;what-about-multi-core-systems&quot;&gt;What About Multi-core Systems?&lt;&#x2F;h2&gt;
&lt;p&gt;Multitasking on a single core uses concurrency to &lt;strong&gt;simulate&lt;&#x2F;strong&gt; parallel execution.&lt;&#x2F;p&gt;
&lt;p&gt;However, as the number of processes grows, delays become noticeable.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hardware-solution-multi-core-cpus&quot;&gt;Hardware Solution: Multi-core CPUs&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Each core can handle a process independently.&lt;&#x2F;li&gt;
&lt;li&gt;This enables &lt;strong&gt;true parallelism&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Yet, even in multi-core systems, concurrency is still crucial—because &lt;strong&gt;we often have more processes than cores&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;final-thought&quot;&gt;Final Thought&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Concurrency is about dealing with lots of things at once.&lt;br &#x2F;&gt;
Parallelism is about doing lots of things at once.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why Free software is good ?</title>
        <published>2025-06-20T00:00:00+00:00</published>
        <updated>2025-06-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/blog/first/"/>
        <id>https://mukund.xyz/blog/first/</id>
        
        <content type="html" xml:base="https://mukund.xyz/blog/first/">&lt;h3 id=&quot;what-is-free-software&quot;&gt;What is free Software&lt;&#x2F;h3&gt;
&lt;!-- 




&lt;a href=&quot;&#x2F;images&amp;#x2F;08-example.jpg&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;08-example.2e188466128dd42a.jpg&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;08-example.jpg 2x&quot;
         width=&quot;512&quot;
         height=&quot;308&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
 --&gt;





&lt;a href=&quot;&#x2F;images&amp;#x2F;gnu-means-freedom.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;gnu-means-freedom.b27c0f549c607b56.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;gnu-means-freedom.png 2x&quot;
         width=&quot;270&quot;
         height=&quot;259&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;A program is free software which respect user Freedom ‘Its free as freedom’ Its means Zero price but we are not taking about price, We talking about more freedom.&lt;&#x2F;p&gt;
&lt;p&gt;More precisely, To support defination free software there are four essential freedoms:&lt;&#x2F;p&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;The freedom to run the program as you wish, for any purpose.&lt;&#x2F;li&gt;
&lt;li&gt;The freedom to study ,to change and  how the program works.&lt;&#x2F;li&gt;
&lt;li&gt;The freedom to redistribute copies When you wish .&lt;&#x2F;li&gt;
&lt;li&gt;The freedom to distribute copies of your modified versions to others.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;“When user control program that’s  free software and When program control user that’s Proprietary Software” - Richard Stallman&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-is-proprietary-software&quot;&gt;what is Proprietary Software&lt;&#x2F;h3&gt;
&lt;p&gt;Proprietary software, also called nonfree software, means software that doesn’t respect users’ freedom and community.&lt;&#x2F;p&gt;
&lt;p&gt;A proprietary program puts its developer or owner in a position of power over its users. This power is in itself an injustice.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;free-software-vs-proprietary-software&quot;&gt;Free Software Vs Proprietary Software&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Points&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;Free Software&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: right&quot;&gt;Proprietary Software&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Modify&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Freedom to change anything&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;restrict to change thing&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Jail&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;No censorship on application&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;censorship on application&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Distribution&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;freely distribute&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;cannot freely distribute&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Source Code&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Have access&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;Not have acces&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Run Program&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Free of cost&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;pay of cost&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Customization&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Highly customizable&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;Limited customization&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;free-software-is-even-more-important-now&quot;&gt;Free Software Is Even More Important Now&lt;&#x2F;h3&gt;
&lt;p&gt;With free software, the users control the program, both individually and collectively. So they control what their computers do&lt;&#x2F;p&gt;
&lt;p&gt;With proprietary software, the program controls the users, and some other entity (the developer or “owner”) controls the program
Even when proprietary software isn’t downright malicious, its developers have an incentive to make it addictive, controlling and manipulative.&lt;&#x2F;p&gt;
&lt;p&gt;Freedom means having control over your own life. If you use a program to carry out activities in your life, your freedom depends on your having control over the program. You deserve to have control over the programs you use, and all the more so when you use them for something important in your life.&lt;&#x2F;p&gt;
&lt;p&gt;“The Free Software Foundation (FSF) is a nonprofit with a worldwide mission to promote computer user freedom. We defend the rights of all software users.”&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Wireframe Tool</title>
        <published>2025-06-20T00:00:00+00:00</published>
        <updated>2025-06-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/project/wireframe/"/>
        <id>https://mukund.xyz/project/wireframe/</id>
        
        <content type="html" xml:base="https://mukund.xyz/project/wireframe/">&lt;h2 id=&quot;wireframe-tool-project-report&quot;&gt;Wireframe Tool Project Report&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Institute:&lt;&#x2F;strong&gt; Birla Vishvakarma Mahavidyalaya&lt;br &#x2F;&gt;
&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mukund58&#x2F;Wireframe-tool&quot;&gt;Project Repo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Group Members:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Mukund Parmar (23CP014)&lt;&#x2F;li&gt;
&lt;li&gt;Jaivik Prajapati (23CP002)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;snapshots&quot;&gt;Snapshots&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;home-page&quot;&gt;Home Page&lt;&#x2F;h3&gt;





&lt;a href=&quot;&#x2F;images&amp;#x2F;project.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project.924513388348b469.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;921&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h3 id=&quot;login-and-signup-page&quot;&gt;Login and Signup Page&lt;&#x2F;h3&gt;
&lt;p&gt;




&lt;a href=&quot;&#x2F;images&amp;#x2F;project-login.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project-login.18800b93816dc9a8.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project-login.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;306&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;






&lt;a href=&quot;&#x2F;images&amp;#x2F;project-signup.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project-signup.3a9e4b3783c69830.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project-signup.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;306&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dashboard-page&quot;&gt;Dashboard Page&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Send verification email&lt;&#x2F;li&gt;
&lt;li&gt;Edit or delete draft&lt;&#x2F;li&gt;
&lt;li&gt;Create new drafts&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;




&lt;a href=&quot;&#x2F;images&amp;#x2F;project-dashborad.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project-dashborad.bd04a0222b6ec3b3.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project-dashborad.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;356&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;






&lt;a href=&quot;&#x2F;images&amp;#x2F;project-DashboardDraft.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project-DashboardDraft.7cf545200223c93e.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project-DashboardDraft.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;385&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;h3 id=&quot;editor-page&quot;&gt;Editor Page&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Name and create drafts&lt;&#x2F;li&gt;
&lt;li&gt;View&#x2F;search all drafts&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;





&lt;a href=&quot;&#x2F;images&amp;#x2F;project-editor.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;project-editor.f06ead22fd3643da.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;project-editor.png 2x&quot;
         width=&quot;675&quot;
         height=&quot;306&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;strong&gt;Wireframe Tool&lt;&#x2F;strong&gt; is a web-based application designed to assist UI&#x2F;UX designers in creating wireframes efficiently. The tool provides an infinite canvas where users can collaboratively design, modify, and share wireframes. It is developed using the LAMP stack (Linux, Apache, MySQL, PHP) and aims to streamline the design process with real-time collaboration features.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2-purpose&quot;&gt;2. Purpose&lt;&#x2F;h2&gt;
&lt;p&gt;The primary goal of this project is to create an intuitive and feature-rich wireframe design tool that allows users to design interfaces collaboratively.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-is-a-wireframe&quot;&gt;What is a Wireframe?&lt;&#x2F;h3&gt;
&lt;p&gt;A wireframe is a simple sketch or blueprint that shows the basic layout of a website or app.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-use-wireframes&quot;&gt;Why Use Wireframes?&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Clarify ideas.&lt;&#x2F;li&gt;
&lt;li&gt;Get early feedback.&lt;&#x2F;li&gt;
&lt;li&gt;Save time.&lt;&#x2F;li&gt;
&lt;li&gt;Focus on function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;benefits-of-using-wireframes&quot;&gt;Benefits of Using Wireframes&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Improves user experience.&lt;&#x2F;li&gt;
&lt;li&gt;Faster changes.&lt;&#x2F;li&gt;
&lt;li&gt;Clearer development.&lt;&#x2F;li&gt;
&lt;li&gt;Saves costs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;objectives&quot;&gt;Objectives&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Provide an infinite canvas for designing wireframes.&lt;&#x2F;li&gt;
&lt;li&gt;Enable real-time collaboration through link-based sharing.&lt;&#x2F;li&gt;
&lt;li&gt;Store and retrieve wireframe data efficiently.&lt;&#x2F;li&gt;
&lt;li&gt;Offer an easy-to-use UI without coding knowledge.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;3-modules&quot;&gt;3. Modules&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;3-1-user-authentication-module&quot;&gt;3.1 User Authentication Module&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Registration and login&lt;&#x2F;li&gt;
&lt;li&gt;Secure session handling&lt;&#x2F;li&gt;
&lt;li&gt;Password encryption and reset&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;3-2-wireframe-design-module&quot;&gt;3.2 Wireframe Design Module&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Infinite canvas&lt;&#x2F;li&gt;
&lt;li&gt;Drag-and-drop UI elements&lt;&#x2F;li&gt;
&lt;li&gt;Layered object management&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;3-3-collaboration-module&quot;&gt;3.3 Collaboration Module&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Shareable links&lt;&#x2F;li&gt;
&lt;li&gt;Real-time sync via WebSockets&#x2F;AJAX&lt;&#x2F;li&gt;
&lt;li&gt;View&#x2F;edit permission management&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;3-4-storage-and-database-module&quot;&gt;3.4 Storage and Database Module&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;MySQL storage and retrieval&lt;&#x2F;li&gt;
&lt;li&gt;Load previous designs&lt;&#x2F;li&gt;
&lt;li&gt;Optimized queries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;3-5-export-and-sharing-module&quot;&gt;3.5 Export and Sharing Module&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Export to PDF&#x2F;PNG&#x2F;SVG&lt;&#x2F;li&gt;
&lt;li&gt;Unique sharing links&lt;&#x2F;li&gt;
&lt;li&gt;Print-ready outputs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;4-functional-requirements&quot;&gt;4. Functional Requirements&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;4-1-user-authentication&quot;&gt;4.1 User Authentication&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Secure login&#x2F;logout&lt;&#x2F;li&gt;
&lt;li&gt;Password hashing&lt;&#x2F;li&gt;
&lt;li&gt;Session management&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-2-wireframe-creation&quot;&gt;4.2 Wireframe Creation&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Drag and drop elements&lt;&#x2F;li&gt;
&lt;li&gt;Resize, move, delete&lt;&#x2F;li&gt;
&lt;li&gt;Undo&#x2F;redo support&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-3-collaboration&quot;&gt;4.3 Collaboration&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Invite via link&lt;&#x2F;li&gt;
&lt;li&gt;Real-time updates&lt;&#x2F;li&gt;
&lt;li&gt;Shared views for all collaborators&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-4-data-storage-and-retrieval&quot;&gt;4.4 Data Storage and Retrieval&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Save wireframes in DB&lt;&#x2F;li&gt;
&lt;li&gt;Access previous work&lt;&#x2F;li&gt;
&lt;li&gt;Autosave support&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-5-export-and-sharing&quot;&gt;4.5 Export and Sharing&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Export to standard formats&lt;&#x2F;li&gt;
&lt;li&gt;Shareable links&lt;&#x2F;li&gt;
&lt;li&gt;Print options&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;additional-functional-requirements&quot;&gt;Additional Functional Requirements&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-user-management&quot;&gt;1. User Management&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Register with email, username, password&lt;&#x2F;li&gt;
&lt;li&gt;Role-based access (admin&#x2F;user)&lt;&#x2F;li&gt;
&lt;li&gt;Update profile info&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;2-draft-management&quot;&gt;2. Draft Management&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Create&#x2F;view&#x2F;edit&#x2F;delete drafts&lt;&#x2F;li&gt;
&lt;li&gt;Use assets in drafts&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;3-asset-management-admin&quot;&gt;3. Asset Management (Admin)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Add&#x2F;update&#x2F;delete assets&lt;&#x2F;li&gt;
&lt;li&gt;Assets linked to drafts&lt;&#x2F;li&gt;
&lt;li&gt;Access control&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-draft-asset-relationship&quot;&gt;4. Draft-Asset Relationship&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Multiple assets per draft&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;5-security-authorization&quot;&gt;5. Security &amp;amp; Authorization&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Only authenticated users can access features&lt;&#x2F;li&gt;
&lt;li&gt;Hashed passwords&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;6-database-constraints&quot;&gt;6. Database Constraints&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Valid user-draft relationship&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;7-import-export&quot;&gt;7. Import&#x2F;Export&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Drafts as JSON import&#x2F;export&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;er-model&quot;&gt;ER Model&lt;&#x2F;h2&gt;





&lt;a href=&quot;&#x2F;images&amp;#x2F;ER.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;ER.3df21119eb03ca3c.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;ER.png 2x&quot;
         width=&quot;402&quot;
         height=&quot;156&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;h2 id=&quot;relational-schema&quot;&gt;Relational Schema&lt;&#x2F;h2&gt;





&lt;a href=&quot;&#x2F;images&amp;#x2F;RS.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Sample image&quot;&gt;
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;mukund.xyz&amp;#x2F;processed_images&amp;#x2F;RS.2cd053587c4e7278.png&quot;
         srcset=&quot;&#x2F;images&amp;#x2F;RS.png 2x&quot;
         width=&quot;411&quot;
         height=&quot;193&quot;
         alt=&quot;Sample image&quot;
         loading=&quot;lazy&quot;
         style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How to debug Your code</title>
        <published>2024-10-24T00:00:00+00:00</published>
        <updated>2024-10-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/blog/gdb-debugger/"/>
        <id>https://mukund.xyz/blog/gdb-debugger/</id>
        
        <content type="html" xml:base="https://mukund.xyz/blog/gdb-debugger/">&lt;p&gt;When your code is running but not working at that time we mostly check line by line code it cant find any clue.&lt;&#x2F;p&gt;
&lt;p&gt;The best way to check your code line by line and what code acutally do internally, when you run the code.&lt;&#x2F;p&gt;
&lt;p&gt;so anyway let’s start by installing GDB debugger in computer .&lt;&#x2F;p&gt;
&lt;p&gt;To install on Ubuntu&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;sudo apt install gdb
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To install on arch&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;sudo pacman -S gdb
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To download on Your Machine
&lt;code&gt;https:&#x2F;&#x2F;sourceware.org&#x2F;gdb&#x2F;download&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can also use it online &lt;code&gt;https:&#x2F;&#x2F;www.onlinegdb.com&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;How to run GDB&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Run Your complier&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;$ g++ -g program
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Run Your gdb&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;$ gdb a.out
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;you will get output something like&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEh1MRdJ05GegnQsLcDMAANqWMjfdqUodUt60DdytAogc20kgN_if3b5-E31D1XxdkA3HgeOcdHhebmnvLCdc4T-YZE9RuqhnMokxGt0adIE6cBU2W1MUbtXJ3Bh-5E1mM7z1LN1DlBH5gPYQZSquW5IFFd3v02gL3AWUmNw_DBnO4uTi1PFKazy2OXs4gpY&amp;#x2F;s1062&amp;#x2F;pic-selected-240910-1852-15.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEh1MRdJ05GegnQsLcDMAANqWMjfdqUodUt60DdytAogc20kgN_if3b5-E31D1XxdkA3HgeOcdHhebmnvLCdc4T-YZE9RuqhnMokxGt0adIE6cBU2W1MUbtXJ3Bh-5E1mM7z1LN1DlBH5gPYQZSquW5IFFd3v02gL3AWUmNw_DBnO4uTi1PFKazy2OXs4gpY&amp;#x2F;s1062&amp;#x2F;pic-selected-240910-1852-15.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;Start Your gdb with start command&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;start 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now Press ctrl + x + a
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEh_YqCCDkmkV2jWyCSwwCsyjEtuNknGjtYEUhGAp5eqwQhgOHjDb3khwg1rzL9Jn4WNR5ljFoTYha4wzNl5tt4m8tn1T_1cG7CEyMOcD5pyOz-ZaUUkGBwXoD380GunlviJTw_loMAuQ2Z8jxNxuHp_Dpp-SmzouKJGmyaBFUFHq7bvNomCu6cucCZBSm19&amp;#x2F;s1366&amp;#x2F;pic-full-240910-1913-48.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEh_YqCCDkmkV2jWyCSwwCsyjEtuNknGjtYEUhGAp5eqwQhgOHjDb3khwg1rzL9Jn4WNR5ljFoTYha4wzNl5tt4m8tn1T_1cG7CEyMOcD5pyOz-ZaUUkGBwXoD380GunlviJTw_loMAuQ2Z8jxNxuHp_Dpp-SmzouKJGmyaBFUFHq7bvNomCu6cucCZBSm19&amp;#x2F;s1366&amp;#x2F;pic-full-240910-1913-48.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;

Now for go to next line&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;next
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;it go two second line&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;next
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;if your ui is not lagging than press &lt;code&gt;ctrl + l&lt;&#x2F;code&gt; to refresh the ui&lt;&#x2F;p&gt;
&lt;p&gt;To check store data in variable&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;print var_name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;or&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;info locals
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To Go Function defination when debgger reach to that line&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;step 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To exit&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;exit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Hope you get basic idea who to use this software&lt;&#x2F;p&gt;
&lt;p&gt;I know that i did not teach everything ,so
To know more You can refere any Documenation or cheatsheet&lt;&#x2F;p&gt;
&lt;p&gt;If i get sometime than i may continue this blog to the end and I will teach everything&lt;&#x2F;p&gt;
&lt;p&gt;Thank You For Your Time :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>JavaScript notes</title>
        <published>2024-10-09T00:00:00+00:00</published>
        <updated>2024-10-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://mukund.xyz/blog/how-javascript-works/"/>
        <id>https://mukund.xyz/blog/how-javascript-works/</id>
        
        <content type="html" xml:base="https://mukund.xyz/blog/how-javascript-works/">&lt;h4 id=&quot;how-javascript-works&quot;&gt;How JavaScript Works&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Everything in JavaScript happen inside an Execution context&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h5 id=&quot;execution-context&quot;&gt;Execution context&lt;&#x2F;h5&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Memory&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;code&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Variable Environment&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Thread Of Execution&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Key Value&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Your Programs&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;a:10&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;Where code line by line Execute&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;fn:{…}&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;&lt;code&gt;JavaScript Is a Synchronous Single-Threaded Language&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Single-Threaded Language - Executed code line by line&lt;br &#x2F;&gt;
Synchronous Single-Threaded Language - Executed code line by line but at specific order&lt;&#x2F;p&gt;
&lt;h5 id=&quot;what-happen-when-you-run-javascript-code&quot;&gt;What happen when You run JavaScript code ?&lt;&#x2F;h5&gt;
&lt;p&gt;let take a JavaScript Programs&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;JavaScript&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-JavaScript &quot;&gt;&lt;code class=&quot;language-JavaScript&quot; data-lang=&quot;JavaScript&quot;&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;square&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;num&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;num&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;4  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ans&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;4 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;square2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;square(n)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;6 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;square4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;square(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When Code is Executed it has two phase&lt;&#x2F;p&gt;
&lt;h5 id=&quot;1-memory-allocation-phase&quot;&gt;1.Memory Allocation phase&lt;&#x2F;h5&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Memory&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;code&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;n : undefined&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;at line 1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square:{store whole code of the function}&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;skip 2 to 5&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square2:undefined&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;At 6 Function Invocation&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square4:undefined&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;In 1st phase of Memory allocation  we were allocating memory to variable and function inside the global space (whole program) and we allocated the memory to variable which is undefined in case of function we totally store whole functions code into the memory&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h5 id=&quot;2-code-execution-phase&quot;&gt;2.Code Execution phase&lt;&#x2F;h5&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Memory&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;code&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;n : 2&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;at line 1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square:{store whole code of the function}&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;skip 2 to 5&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square2:4&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;At 6 Function Invocation&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;square4:16&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;In 2nd Phase which is Code Execution Phase Now it executed code line by line and&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;it goes to first line allocate value to it variable and&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;as control goes to line number 6 ,it’ll invoke the function so when you invoke the function Execution context is created and as it is there 1st Memory allocation num and ans is allocated to memeory and 2nd in Code Execution whole function will run here num * num it store into ans and return statement is executed.In return statement we take back the control over at line number 6 and now square2 will store new value which is coming from function invocation which was the ans&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h5 id=&quot;what-do-you-mean-by-function-invocation&quot;&gt;What Do you mean by Function Invocation&lt;&#x2F;h5&gt;
&lt;p&gt;It means that function is now begin executed&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;square2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;square&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Everytime when Function Invoaction there a new Execution Context has been created&lt;&#x2F;p&gt;
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEim3XmMyXtIw7xgiECdqHePh2dkJN6LPqcydmj0LDhjY1Gtn-HuqqczqBkiLJC395xn3b5JCnee0uhUjmeeOPtvzJdZzipPRmRCk3SJtwWezplF6szNw6QXjBeO2Ynjv85-rB3m1UJagAbnfKIcvU369M3IU0pYVXIsdn6CVNnTC6gBrGG-SlqB8hqKw4Xp&amp;#x2F;s16000&amp;#x2F;09-02-2025+16:45:36.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEim3XmMyXtIw7xgiECdqHePh2dkJN6LPqcydmj0LDhjY1Gtn-HuqqczqBkiLJC395xn3b5JCnee0uhUjmeeOPtvzJdZzipPRmRCk3SJtwWezplF6szNw6QXjBeO2Ynjv85-rB3m1UJagAbnfKIcvU369M3IU0pYVXIsdn6CVNnTC6gBrGG-SlqB8hqKw4Xp&amp;#x2F;s16000&amp;#x2F;09-02-2025+16:45:36.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;As soon as you run the code there a global Execution context is created and&lt;&#x2F;p&gt;
&lt;p&gt;In 1st phase of Memory allocation  we were allocating memory to variable and function inside the global space (whole program) and we allocated the memory to variable which is undefined in case of function we totally store whole functions code into the memory&lt;&#x2F;p&gt;
&lt;p&gt;Now in 2nd Phase which is Code Execution Phase Now it executed code line by line and
it goes to first line allocate value to it variable and&lt;&#x2F;p&gt;
&lt;p&gt;as control goes to line number 6 ,it’ll invoke the function so when you invoke the function Execution context is created and as it is there 1st Memory allocation num and ans is allocated to memeory and 2nd in Code Execution whole function will run here num * num it store into ans and return statement is executed.In return statement we take back the control over at line number 6 and now square2 will store new value which is coming from function invocation which was the ans&lt;&#x2F;p&gt;
&lt;h5 id=&quot;how-javascript-engine-handle-all-this-execution-context-creation-deletion-and-control&quot;&gt;How javascript Engine handle all this execution context creation,deletion and control&lt;&#x2F;h5&gt;
&lt;ul&gt;
&lt;li&gt;It Manages a Call Stack&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It is stack where a whole(Global) execution context is pushed inside the stack(GEC).
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiNgv7cIqJ7TynCvJSFwU19lFliThp1fHyFYVxeENPomHa5CJxJFX11lB86MIGmVE70PZZoqDAXhd6QoWR4-YmY-KcNKt7Fu7r8KmEQejYuGo-lPNoqBPUKCwK5HV0BM-uUYu2VBG8TIakNtLMGF7ihXaxwqIaIIx23myQXqhpvg6gJ3nDBMJjuzQbkfN3v&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:29:51.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEiNgv7cIqJ7TynCvJSFwU19lFliThp1fHyFYVxeENPomHa5CJxJFX11lB86MIGmVE70PZZoqDAXhd6QoWR4-YmY-KcNKt7Fu7r8KmEQejYuGo-lPNoqBPUKCwK5HV0BM-uUYu2VBG8TIakNtLMGF7ihXaxwqIaIIx23myQXqhpvg6gJ3nDBMJjuzQbkfN3v&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:29:51.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;when control goes to function invoaction it create new execution context 1. Which is pushed into stack e.g E1 Once we are done with executing function, we return the ans and poped out E1 and
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhrRsXvWFsJF8diu93CipTdGVnmLRKr5veGckgDcNMHdXdgdg5Hmjomi2tFDid8AqQpqsVy1YGOrwH-QWom5pvwMiphlHJOKM250RMLwHmIcO9-volynANnINnX4CbNphC00gcy_TPLywxMHBmrPastjRhYOjmyw1w0n60AeYPYxEcJZID2DpbN8ivQbnmj&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:19:55.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEhrRsXvWFsJF8diu93CipTdGVnmLRKr5veGckgDcNMHdXdgdg5Hmjomi2tFDid8AqQpqsVy1YGOrwH-QWom5pvwMiphlHJOKM250RMLwHmIcO9-volynANnINnX4CbNphC00gcy_TPLywxMHBmrPastjRhYOjmyw1w0n60AeYPYxEcJZID2DpbN8ivQbnmj&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:19:55.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;

control goes back to GEC where it left&lt;br &#x2F;&gt;
then we move on line numeber 7,Where the new function is invoked and new execution context is created e.g E2…
After executing function, we return the ans and poped out E2 and control goes back to GEC where it left&lt;&#x2F;p&gt;
&lt;p&gt;after all code is executed Whole stack become empty
&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi8r4M3GWmCQlsMng-ycQkPZkCoTfMfAejzkoSmQeqgfy2MkTyJ1ffqJfQeGxY5VB2eOT9ncti3uDT_0Ump8MgKNCfWJxJY5MbuesEb3Wfmrydhe7ycIgcqxgUo0lHyOQoHbCpHswsPdL0wFdMeTkoyaIi_hrDBKmYYv7t70DeBbqVZSNOfvO5MlmJiqKvx&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:28:08.png&quot; data-lightbox=&quot;blog-img&quot; data-title=&quot;Screenshot&quot;&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;blogger.googleusercontent.com&amp;#x2F;img&amp;#x2F;b&amp;#x2F;R29vZ2xl&amp;#x2F;AVvXsEi8r4M3GWmCQlsMng-ycQkPZkCoTfMfAejzkoSmQeqgfy2MkTyJ1ffqJfQeGxY5VB2eOT9ncti3uDT_0Ump8MgKNCfWJxJY5MbuesEb3Wfmrydhe7ycIgcqxgUo0lHyOQoHbCpHswsPdL0wFdMeTkoyaIi_hrDBKmYYv7t70DeBbqVZSNOfvO5MlmJiqKvx&amp;#x2F;s1600&amp;#x2F;09-02-2025+21:28:08.png&quot;
       alt=&quot;Screenshot&quot;
       loading=&quot;lazy&quot;
       style=&quot;max-width: 100%; height: auto; border-radius: 6px;&quot; &#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Call Stack Maintain the order of execution of execution context&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;ALt Names of Call Stack&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;1.call Stack&lt;&#x2F;li&gt;
&lt;li&gt;2.Execution Context Stack&lt;&#x2F;li&gt;
&lt;li&gt;3.Program Stack&lt;&#x2F;li&gt;
&lt;li&gt;4.Runtime Stack&lt;&#x2F;li&gt;
&lt;li&gt;5.Machine Stack&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;synchronous-or-asynchronous&quot;&gt;Synchronous OR Asynchronous&lt;&#x2F;h4&gt;
&lt;h4 id=&quot;single-threaded-or-multi-threaded&quot;&gt;Single Threaded OR Multi-Threaded&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Thank You For Your Time :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
